{"version":3,"file":"static/js/350.2e083889.chunk.js","mappings":"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","sources":["components/CustomSelect/CustomSelect.styled.js","components/CustomSelect/CustomSelect.jsx","components/OrderForm/OrderForm.styled.js","components/OrderForm/OrderForm.jsx","pages/OrderPage/OrderPage.jsx"],"sourcesContent":["import { RiArrowDownSFill } from 'react-icons/ri';\nimport styled from 'styled-components';\n\nexport const customStyles = {\n  option: (provided, state) => {\n    return {\n      ...provided,\n      width: '95%',\n      margin: '8px',\n      border: 'none',\n      borderRadius: state.isFocused ? '2px' : '0',\n      outline: 'none',\n      background: state.isFocused\n        ? 'linear-gradient(270deg, rgb(138, 144, 246) 0%, rgb(189, 212, 242) 100%)'\n        : 'transparent',\n      color: '#000',\n      cursor: 'pointer',\n      fontFamily: 'e-Ukraine-Light, sans-serif',\n      fontSize: '14px',\n      fontWeight: '300',\n\n      '@media (min-width: 768px)': {\n        width: '97%',\n        fontFamily: 'e-Ukraine-Regular, sans-serif',\n        fontSize: '16px',\n        fontWeight: '400',\n        lineHeight: '1.87',\n      },\n\n      '&:hover': {\n        background:\n          'linear-gradient(270deg, rgb(138, 144, 246) 0%, rgb(189, 212, 242) 100%)',\n      },\n    };\n  },\n\n  control: (styles, state) => {\n    const hasValue =\n      state.selectProps.value !== null && state.selectProps.value !== undefined;\n\n    return {\n      ...styles,\n      height: 'auto',\n      minHeight: '23px',\n      borderColor: 'transparent',\n      border: 'none',\n      borderBottom: '1px solid #2B2B2B',\n      borderRadius: 0,\n      boxShadow: 'none',\n      backgroundColor: hasValue\n        ? state.isFocused\n          ? 'transparent'\n          : 'rgb(232, 240, 254)'\n        : 'transparent',\n      fontFamily: 'e-Ukraine-Light, sans-serif',\n      fontSize: '14px',\n      fontWeight: '300',\n\n      '@media (min-width: 375px)': {\n        width: '327px',\n      },\n\n      '@media (min-width: 768px)': {\n        minHeight: '31px',\n        width: '656px',\n        fontFamily: 'e-Ukraine-Regular, sans-serif',\n        fontSize: '16px',\n        fontWeight: '400',\n        lineHeight: '1.87',\n      },\n\n      '@media (min-width: 1440px)': {\n        width: '528px',\n      },\n\n      '& .css-1xc3v61-indicatorContainer': {\n        padding: 0,\n        color: 'transparent',\n      },\n\n      '& .css-15lsz6c-indicatorContainer': {\n        padding: 0,\n        color: 'transparent',\n      },\n    };\n  },\n\n  valueContainer: provided => ({\n    ...provided,\n    padding: 0,\n  }),\n\n  menu: provided => {\n    return {\n      ...provided,\n      borderRadius: '0px',\n    };\n  },\n\n  placeholder: provided => ({\n    ...provided,\n    position: 'absolute',\n    margin: 0,\n    fontFamily: 'e-Ukraine-Light, sans-serif',\n    fontSize: '14px',\n    fontWeight: '300',\n    color: '#d6d6d6',\n\n    '@media (min-width: 768px)': {\n      fontFamily: 'e-Ukraine-Regular, sans-serif',\n      fontSize: '16px',\n      fontWeight: '400',\n      lineHeight: '1.87',\n    },\n  }),\n\n  indicatorSeparator: () => ({}),\n\n  indicators: () => {\n    return {\n      cursor: 'pointer',\n    };\n  },\n\n  dropdownIndicator: (styles, state) => ({\n    ...styles,\n    padding: '0',\n    transition: 'transform 250ms cubic-bezier(0.4, 0, 0.2, 1)',\n    transform: state.selectProps.menuIsOpen ? 'rotate(180deg)' : null,\n  }),\n\n  input: provided => ({\n    ...provided,\n    position: 'relative',\n    width: '270px',\n    height: '23px',\n    padding: 0,\n    margin: 0,\n    fontFamily: 'e-Ukraine-Light, sans-serif',\n    fontSize: '14px',\n    fontWeight: '300',\n    borderColor: 'transparent',\n\n    '@media (min-width: 375px)': {\n      width: '327px',\n    },\n\n    '@media (min-width: 768px)': {\n      width: '656px',\n      height: '31px',\n      fontFamily: 'e-Ukraine-Regular, sans-serif',\n      fontSize: '16px',\n      fontWeight: '400',\n      lineHeight: '1.87',\n    },\n\n    '@media (min-width: 1440px)': {\n      width: '528px',\n    },\n  }),\n};\n\nexport const SelectIcon = styled(RiArrowDownSFill)`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  width: 15px;\n  height: 15px;\n`;\n","import React from 'react';\nimport Select, { components } from 'react-select';\nimport PropTypes from 'prop-types';\nimport { SelectIcon, customStyles } from './CustomSelect.styled';\n\nconst DropdownIndicator = props => {\n  return (\n    components.DropdownIndicator && (\n      <components.DropdownIndicator {...props}>\n        <SelectIcon />\n      </components.DropdownIndicator>\n    )\n  );\n};\n\nexport const CustomSelect = ({ options, onChange, name, placeholder }) => {\n  return (\n    <>\n      <Select\n        name={name}\n        placeholder={placeholder}\n        options={options}\n        onChange={onChange}\n        styles={customStyles}\n        components={{ DropdownIndicator }}\n      />\n    </>\n  );\n};\n\nCustomSelect.propTypes = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      label: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    }).isRequired\n  ).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import styled, { css } from 'styled-components';\n\nexport const FormContainer = styled.div`\n  padding: 28px 16px;\n  margin-bottom: 36px;\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.gradientBackground};\n\n  @media (min-width: 768px) {\n    padding: 32px;\n    border-radius: ${({ theme }) => theme.radii.m};\n  }\n\n  @media (min-width: 1440px) {\n    padding: 44px 64px;\n    border-radius: ${({ theme }) => theme.radii.xl};\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  margin-bottom: 24px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n\n  @media (min-width: 768px) {\n    font-family: ${({ theme }) => theme.fonts.headRegular};\n    font-size: ${({ theme }) => theme.fontSizes.l};\n    letter-spacing: -1.44px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 44px;\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n    letter-spacing: -2.4px;\n  }\n`;\n\nexport const FormList = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media (min-width: 1440px) {\n    gap: 36px;\n  }\n\n  @media (min-width: 1440px) {\n    justify-content: space-between;\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n`;\n\nexport const FormBlocks = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media (min-width: 768px) {\n    gap: 36px;\n  }\n`;\n\nexport const FormText = styled.p`\n  margin-bottom: 12px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  color: ${({ theme }) => theme.colors.black};\n\n  @media (min-width: 768px) {\n    font-family: ${({ theme }) => theme.fonts.light};\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeights.light};\n  }\n`;\n\nexport const FormInput = styled.input`\n  position: relative;\n  width: 100%;\n  height: 23px;\n  padding-bottom: 6px;\n  font-size: 14px;\n  border-color: transparent;\n  background-color: inherit;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primaryFont};\n\n  ::placeholder {\n    color: #d6d6d6;\n  }\n\n  &:focus {\n    outline-color: ${({ theme }) => theme.colors.blue};\n  }\n\n  ${({ hasValue }) =>\n    hasValue &&\n    css`\n      background-color: rgb(232, 240, 254);\n    `}\n\n  @media (min-width: 768px) {\n    width: 656px;\n    height: 31px;\n    padding-bottom: 0;\n    font-family: ${({ theme }) => theme.fonts.regular};\n    font-size: ${({ theme }) => theme.fontSizes.xs};\n    font-weight: ${({ theme }) => theme.fontWeights.regular};\n    line-height: ${({ theme }) => theme.lineHeights.secondary};\n  }\n\n  @media (min-width: 1440px) {\n    width: 528px;\n  }\n`;\n\nexport const FormValidation = styled.p`\n  position: absolute;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.pink};\n`;\n\nexport const FormBtn = styled.button`\n  margin-top: 4px;\n  width: 100%;\n  height: 40px;\n  padding: 10px;\n  text-align: center;\n  border-radius: 12px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  background: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.yellow};\n  }\n\n  @media (min-width: 768px) {\n    width: 656px;\n    height: 48px;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 16px;\n    font-size: ${({ theme }) => theme.fontSizes.m};\n  }\n\n  @media (min-width: 1440px) {\n    width: 519px;\n    height: 64px;\n    border-radius: ${({ theme }) => theme.radii.m};\n  }\n`;\n\nexport const RadioButtons = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n`;\n\nexport const RadioContainer = styled.label`\n  display: inline-block;\n  position: relative;\n  padding-left: 30px;\n  margin-right: 15px;\n  font-size: 16px;\n  line-height: 1.5;\n  cursor: pointer;\n`;\n\nexport const HiddenRadio = styled.input.attrs({ type: 'radio' })`\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n`;\n\nexport const SquareRadio = styled.span`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 24px;\n  height: 24px;\n  border: 1px solid ${({ theme }) => theme.colors.blue};\n  background-color: transparent;\n  border-radius: 4px;\n\n  svg {\n    width: 24px;\n    height: 24px;\n    opacity: 0;\n  }\n\n  &:hover {\n    background-color: #8ac1e8;\n  }\n\n  ${HiddenRadio}:checked + & {\n    border: none;\n    svg {\n      width: 24px;\n      height: 24px;\n      opacity: 1;\n    }\n  }\n`;\n\nexport const RadioLabel = styled.span`\n  padding-left: 12px;\n`;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport { addOrder } from 'services/api';\nimport { orderValidationSchema } from '../../utils/validationSchema';\nimport Icon from '../../assets/images/sprite.svg';\nimport { CustomSelect } from 'components/CustomSelect/CustomSelect';\nimport { Gratitude } from 'components/Gratitude/Gratitude';\nimport {\n  FormBlocks,\n  FormBtn,\n  FormContainer,\n  FormInput,\n  FormList,\n  FormText,\n  FormTitle,\n  FormValidation,\n  HiddenRadio,\n  RadioButtons,\n  RadioContainer,\n  RadioLabel,\n  SquareRadio,\n} from './OrderForm.styled';\n\nexport const OrderForm = () => {\n  const [submitted, setSubmitted] = useState(false);\n  const { t } = useTranslation();\n  const typeBaseOptions = [\n    { value: t('forms.kapron'), label: t('forms.kapron') },\n    { value: t('forms.plastic'), label: t('forms.plastic') },\n  ];\n\n  const materialOptions = [\n    { value: t('forms.cotton'), label: t('forms.cotton') },\n    { value: t('forms.spunbond'), label: t('forms.spunbond') },\n  ];\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      position: '',\n      militaryUnit: '',\n      phone: '',\n      comment: '',\n      gridSize: '',\n      typeBase: '',\n      material: '',\n      color: '',\n      loops: '',\n    },\n    validationSchema: orderValidationSchema,\n    onSubmit: async values => {\n      try {\n        await addOrder(values);\n        setSubmitted(true);\n        toast.success('Дані успішно відправлені!');\n      } catch (error) {\n        setSubmitted(false);\n        toast.error(\n          'Виникла помилка під час відправки форми. Спробуйте ще раз.'\n        );\n      }\n    },\n  });\n  const {\n    name,\n    position,\n    militaryUnit,\n    phone,\n    comment,\n    gridSize,\n    typeBase,\n    material,\n    color,\n    loops,\n  } = formik.values;\n\n  return (\n    <>\n      {submitted ? (\n        <Gratitude\n          title=\"Дякуємо, що обрали саме нас!\"\n          text=\"Ми зв’яжемось з вами у найближчий час\"\n          variant=\"primary\"\n        />\n      ) : (\n        <FormContainer>\n          <FormTitle>Вкажіть ваші дані</FormTitle>\n          <FormList onSubmit={formik.handleSubmit}>\n            <FormBlocks>\n              <label>\n                <FormText>ПІБ</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Іващук Іван Петрович\"\n                  autoComplete=\"username\"\n                  value={name}\n                  onChange={formik.handleChange}\n                  hasValue={name.length > 0}\n                />\n                {formik.touched.name && formik.errors.name ? (\n                  <FormValidation>{formik.errors.name}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Ваша посада</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"position\"\n                  placeholder=\"Молодший лейтинант\"\n                  value={position}\n                  onChange={formik.handleChange}\n                  hasValue={position.length > 0}\n                />\n                {formik.touched.position && formik.errors.position ? (\n                  <FormValidation>{formik.errors.position}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Номер військової частини/бригади</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"militaryUnit\"\n                  placeholder=\"3 Окрема мотострілкова бригада\"\n                  value={militaryUnit}\n                  onChange={formik.handleChange}\n                  hasValue={militaryUnit.length > 0}\n                />\n                {formik.touched.militaryUnit && formik.errors.militaryUnit ? (\n                  <FormValidation>{formik.errors.militaryUnit}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Ваш номер телефону</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"+380 98 200 77 49\"\n                  autoComplete=\"tel\"\n                  value={phone}\n                  onChange={formik.handleChange}\n                  hasValue={phone.length > 0}\n                />\n                {formik.touched.phone && formik.errors.phone ? (\n                  <FormValidation>{formik.errors.phone}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Додаткові коментарі</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"comment\"\n                  placeholder=\"Якщо потрібно\"\n                  autoComplete=\"off\"\n                  value={comment}\n                  onChange={formik.handleChange}\n                  hasValue={comment.length > 0}\n                />\n              </label>\n            </FormBlocks>\n\n            <FormBlocks>\n              <label>\n                <FormText>Розмір сітки</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"gridSize\"\n                  placeholder=\"8х4м\"\n                  value={gridSize}\n                  onChange={formik.handleChange}\n                  hasValue={gridSize.length > 0}\n                />\n                {formik.touched.gridSize && formik.errors.gridSize ? (\n                  <FormValidation>{formik.errors.gridSize}</FormValidation>\n                ) : null}\n              </label>\n\n              <div>\n                <FormText>Вид основи</FormText>\n                <CustomSelect\n                  name=\"typeBase\"\n                  placeholder=\"Виберіть вид основи сітки\"\n                  options={typeBaseOptions}\n                  value={typeBaseOptions.find(\n                    option => option.value === typeBase\n                  )}\n                  onChange={selectedOption =>\n                    formik.setFieldValue('typeBase', selectedOption.value)\n                  }\n                />\n                {formik.touched.typeBase && formik.errors.typeBase ? (\n                  <FormValidation>{formik.errors.typeBase}</FormValidation>\n                ) : null}\n              </div>\n              <div>\n                <FormText>Матеріал</FormText>\n                <CustomSelect\n                  name=\"material\"\n                  placeholder=\"Виберіть матеріал\"\n                  options={materialOptions}\n                  value={materialOptions.find(\n                    option => option.value === material\n                  )}\n                  onChange={selectedOption =>\n                    formik.setFieldValue('material', selectedOption.value)\n                  }\n                />\n                {formik.touched.material && formik.errors.material ? (\n                  <FormValidation>{formik.errors.material}</FormValidation>\n                ) : null}\n              </div>\n\n              <label>\n                <FormText>Колір сітки</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"color\"\n                  placeholder=\"30% зелені 70% суха трава\"\n                  value={color}\n                  onChange={formik.handleChange}\n                  hasValue={color.length > 0}\n                />\n                {formik.touched.color && formik.errors.color ? (\n                  <FormValidation>{formik.errors.color}</FormValidation>\n                ) : null}\n              </label>\n\n              <div>\n                <FormText>Петлі для кріплення</FormText>\n                <RadioButtons>\n                  <RadioContainer>\n                    <HiddenRadio\n                      name=\"loops\"\n                      value=\"yes\"\n                      checked={loops === 'yes'}\n                      onChange={formik.handleChange}\n                    />\n                    <SquareRadio>\n                      <svg>\n                        <use href={Icon + '#icon-check'}></use>\n                      </svg>\n                    </SquareRadio>\n                    <RadioLabel>Так</RadioLabel>\n                  </RadioContainer>\n                  <RadioContainer>\n                    <HiddenRadio\n                      name=\"loops\"\n                      value=\"no\"\n                      checked={loops === 'no'}\n                      onChange={formik.handleChange}\n                    />\n                    <SquareRadio>\n                      <svg>\n                        <use href={Icon + '#icon-check'}></use>\n                      </svg>\n                    </SquareRadio>\n                    <RadioLabel>Ні</RadioLabel>\n                  </RadioContainer>\n                </RadioButtons>\n                {formik.touched.loops && formik.errors.loops ? (\n                  <FormValidation>{formik.errors.loops}</FormValidation>\n                ) : null}\n              </div>\n            </FormBlocks>\n\n            <FormBtn type=\"submit\">Замовити</FormBtn>\n          </FormList>\n        </FormContainer>\n      )}\n    </>\n  );\n};\n","import { useTranslation } from 'react-i18next';\nimport { OrderForm } from 'components/OrderForm/OrderForm';\nimport { PathDisplayer } from 'components/PathDisplayer/PathDisplayer';\n\nconst OrderPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PathDisplayer current={{ path: '/order', name: t('pages.ordering') }} />\n      <OrderForm />\n    </>\n  );\n};\n\nexport default OrderPage;\n"],"names":["customStyles","option","provided","state","width","margin","border","borderRadius","isFocused","outline","background","color","cursor","fontFamily","fontSize","fontWeight","lineHeight","control","styles","hasValue","selectProps","value","undefined","height","minHeight","borderColor","borderBottom","boxShadow","backgroundColor","padding","valueContainer","menu","placeholder","position","indicatorSeparator","indicators","dropdownIndicator","transition","transform","menuIsOpen","input","SelectIcon","styled","RiArrowDownSFill","theme","colors","primaryFont","DropdownIndicator","props","components","c","CustomSelect","options","onChange","name","FormContainer","gradientBackground","radii","m","xl","FormTitle","fonts","regular","fontSizes","fontWeights","headRegular","l","FormList","FormBlocks","FormText","xs","black","light","s","FormInput","blue","css","lineHeights","secondary","FormValidation","pink","FormBtn","white","yellow","RadioButtons","RadioContainer","HiddenRadio","type","SquareRadio","RadioLabel","OrderForm","useState","submitted","setSubmitted","t","useTranslation","typeBaseOptions","label","materialOptions","formik","useFormik","initialValues","militaryUnit","phone","comment","gridSize","typeBase","material","loops","validationSchema","orderValidationSchema","onSubmit","values","addOrder","toast","Gratitude","title","text","variant","handleSubmit","autoComplete","handleChange","length","touched","errors","find","selectedOption","setFieldValue","checked","href","Icon","PathDisplayer","current","path"],"sourceRoot":""}