{"version":3,"file":"static/js/969.b3dbcce4.chunk.js","mappings":"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","sources":["components/PartnersForm/PartnersForm.styled.js","components/PartnersForm/PartnersForm.jsx","pages/PartnersPage/PartnersPage.jsx"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const FormContainer = styled.div`\n  padding: 28px 16px;\n  margin-bottom: 36px;\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.gradientBackground};\n\n  @media (min-width: 768px) {\n    padding: 32px;\n    border-radius: ${({ theme }) => theme.radii.m};\n  }\n\n  @media (min-width: 1440px) {\n    padding: 44px 64px;\n    border-radius: ${({ theme }) => theme.radii.xl};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  margin-bottom: 24px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n\n  @media (min-width: 768px) {\n    font-family: ${({ theme }) => theme.fonts.headRegular};\n    font-size: ${({ theme }) => theme.fontSizes.l};\n    letter-spacing: -1.44px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 44px;\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n    letter-spacing: -2.4px;\n  }\n`;\n\nexport const FormList = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media (min-width: 768px) {\n    gap: 36px;\n  }\n`;\n\nexport const FormText = styled.p`\n  margin-bottom: 12px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  color: ${({ theme }) => theme.colors.black};\n\n  @media (min-width: 768px) {\n    font-family: ${({ theme }) => theme.fonts.light};\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeights.light};\n  }\n`;\n\nexport const FormInput = styled.input`\n  position: relative;\n  width: 100%;\n  height: 23px;\n  padding-bottom: 6px;\n  font-size: 14px;\n  border-color: transparent;\n  background-color: inherit;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primaryFont};\n\n  ::placeholder {\n    color: #d6d6d6;\n  }\n\n  &:focus {\n    outline-color: ${({ theme }) => theme.colors.blue};\n  }\n\n  ${({ hasValue }) =>\n    hasValue &&\n    css`\n      background-color: rgb(232, 240, 254);\n    `}\n\n  @media (min-width: 768px) {\n    width: 656px;\n    height: 31px;\n    padding-bottom: 0;\n    font-family: ${({ theme }) => theme.fonts.regular};\n    font-size: ${({ theme }) => theme.fontSizes.xs};\n    font-weight: ${({ theme }) => theme.fontWeights.regular};\n    line-height: ${({ theme }) => theme.lineHeights.secondary};\n  }\n\n  @media (min-width: 1440px) {\n    width: 528px;\n    height: 31px;\n  }\n`;\n\nexport const FormValidation = styled.p`\n  position: absolute;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.pink};\n`;\n\nexport const FormBtn = styled.button`\n  margin-top: 4px;\n  width: 100%;\n  height: 40px;\n  padding: 10px;\n  text-align: center;\n  border-radius: 12px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  background: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.yellow};\n  }\n\n  @media (min-width: 768px) {\n    width: 656px;\n    height: 48px;\n    padding: 10px;\n    margin-top: 20px;\n    border-radius: 16px;\n    font-size: ${({ theme }) => theme.fontSizes.m};\n  }\n\n  @media (min-width: 1440px) {\n    width: 519px;\n    height: 64px;\n    border-radius: ${({ theme }) => theme.radii.m};\n  }\n`;\n\nexport const SupportImg = styled.img`\n  width: 446px;\n  height: 490px;\n`;\n","import React, { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useMediaQuery } from 'react-responsive';\nimport { addPartner } from 'services/api';\nimport { partnerValidationSchema } from '../../utils/validationSchema';\nimport { Gratitude } from 'components/Gratitude/Gratitude';\nimport heart from '../../assets/images/heart.png';\nimport {\n  FormBtn,\n  FormContainer,\n  FormInput,\n  FormList,\n  FormText,\n  FormTitle,\n  FormValidation,\n  SupportImg,\n} from './PartnersForm.styled';\n\nexport const PartnersForm = () => {\n  const [submitted, setSubmitted] = useState(false);\n  const isDesktop = useMediaQuery({ query: '(min-width: 1440px)' });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      company: '',\n      email: '',\n      phone: '',\n      comment: '',\n    },\n    validationSchema: partnerValidationSchema,\n    onSubmit: async values => {\n      try {\n        await addPartner(values);\n        setSubmitted(true);\n        toast.success('Дані успішно відправлені!');\n      } catch (error) {\n        setSubmitted(false);\n        toast.error(\n          'Виникла помилка під час відправки форми. Спробуйте ще раз.'\n        );\n      }\n    },\n  });\n  const { name, company, email, phone, comment } = formik.values;\n\n  return (\n    <>\n      {submitted ? (\n        <Gratitude\n          title=\"Дякуємо за підтримку!\"\n          text=\"Ми зв’яжемось з вами у найближчий час\"\n          variant=\"primary\"\n        />\n      ) : (\n        <FormContainer>\n          <div>\n            <FormTitle>Вкажіть ваші дані</FormTitle>\n            <FormList onSubmit={formik.handleSubmit}>\n              <label>\n                <FormText>ПІБ</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder=\"Іващук Іван Петрович\"\n                  autoComplete=\"username\"\n                  value={name}\n                  onChange={formik.handleChange}\n                  hasValue={name.length > 0}\n                />\n                {formik.touched.name && formik.errors.name ? (\n                  <FormValidation>{formik.errors.name}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Чим ви займаєтесь</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"company\"\n                  placeholder=\"В мене будівельна компанія\"\n                  value={company}\n                  onChange={formik.handleChange}\n                  hasValue={company.length > 0}\n                />\n                {formik.touched.company && formik.errors.company ? (\n                  <FormValidation>{formik.errors.company}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>E-mail</FormText>\n                <FormInput\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"ukrain@gmail.com\"\n                  autoComplete=\"username\"\n                  value={email}\n                  onChange={formik.handleChange}\n                  hasValue={email.length > 0}\n                />\n                {formik.touched.email && formik.errors.email ? (\n                  <FormValidation>{formik.errors.email}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Ваш номер телефону</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder=\"+380 98 200 77 49\"\n                  autoComplete=\"tel\"\n                  value={phone}\n                  onChange={formik.handleChange}\n                  hasValue={phone.length > 0}\n                />\n                {formik.touched.phone && formik.errors.phone ? (\n                  <FormValidation>{formik.errors.phone}</FormValidation>\n                ) : null}\n              </label>\n              <label>\n                <FormText>Додаткові коментарі</FormText>\n                <FormInput\n                  type=\"text\"\n                  name=\"comment\"\n                  placeholder=\"Якщо потрібно\"\n                  autoComplete=\"off\"\n                  value={comment}\n                  onChange={formik.handleChange}\n                  hasValue={comment.length > 0}\n                />\n              </label>\n              <FormBtn type=\"submit\">Подати заявку</FormBtn>\n            </FormList>\n          </div>\n          {isDesktop && <SupportImg src={heart} alt=\"support\" />}\n        </FormContainer>\n      )}\n    </>\n  );\n};\n","import { PartnersForm } from 'components/PartnersForm/PartnersForm';\nimport { PathDisplayer } from 'components/PathDisplayer/PathDisplayer';\nimport { useTranslation } from 'react-i18next';\n\nconst PartnersPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PathDisplayer\n        current={{ path: '/partners', name: t('pages.partnership') }}\n      />\n      <PartnersForm />\n    </>\n  );\n};\n\nexport default PartnersPage;\n"],"names":["FormContainer","styled","theme","colors","gradientBackground","radii","m","xl","FormTitle","fonts","regular","fontSizes","fontWeights","headRegular","l","FormList","FormText","xs","black","light","s","FormInput","primaryFont","blue","hasValue","css","lineHeights","secondary","FormValidation","pink","FormBtn","white","yellow","SupportImg","PartnersForm","useState","submitted","setSubmitted","isDesktop","useMediaQuery","query","formik","useFormik","initialValues","name","company","email","phone","comment","validationSchema","partnerValidationSchema","onSubmit","values","addPartner","toast","Gratitude","title","text","variant","handleSubmit","type","placeholder","autoComplete","value","onChange","handleChange","length","touched","errors","src","heart","alt","t","useTranslation","PathDisplayer","current","path"],"sourceRoot":""}