{"version":3,"file":"static/js/764.511018c6.chunk.js","mappings":"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","sources":["components/PathDisplayer/PathDisplayer.styled.js","components/PathDisplayer/PathDisplayer.jsx","components/ReviewsPagination/ReviewsPagination.styled.js","components/ReviewsPagination/ReviewsPagination.jsx","pages/ReviewsPage/ReviewsPage.styled.js","pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const PathWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding-left: ${({ theme }) => theme.spacing(4)};\n  margin-bottom: ${({ theme }) => theme.spacing(6.5)};\n\n  @media only screen and (min-width: 768px) {\n    gap: ${({ theme }) => theme.spacing(3)};\n    padding-left: ${({ theme }) => theme.spacing(8)};\n    margin-top: 0;\n    margin-bottom: ${({ theme }) => theme.spacing(11)};\n  }\n\n  @media only screen and (min-width: 1440px) {\n    padding-left: ${({ theme }) => theme.spacing(16)};\n    margin-bottom: ${({ theme }) => theme.spacing(16)};\n  }\n`;\n\nexport const PathLink = styled(Link)`\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n\n  color: ${({ theme }) => theme.colors.grey};\n\n  @media only screen and (min-width: 1440px) {\n    font-size: 14px;\n    line-height: normal;\n  }\n`;\n\nexport const PathArrow = styled.svg`\n  width: 10px;\n  height: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { PathArrow, PathLink, PathWrapper } from './PathDisplayer.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nexport const PathDisplayer = ({ current, isGallery = false }) => {\n  const { t } = useTranslation();\n  const homePage = { path: '/', name: t('nav.main') };\n\n  return (\n    <PathWrapper>\n      <PathLink\n        to={homePage.path}\n        dangerouslySetInnerHTML={{ __html: homePage.name }}\n      />\n      <PathArrow>\n        <use href={sprite + '#path-arrow'}></use>\n      </PathArrow>\n      <PathLink\n        to={current.path}\n        dangerouslySetInnerHTML={{ __html: current.name }}\n      />\n\n      {isGallery && (\n        <>\n          <PathArrow>\n            <use href={sprite + '#path-arrow'}></use>\n          </PathArrow>\n          <PathLink\n            to={current.path}\n            dangerouslySetInnerHTML={{ __html: current.galleryType }}\n          />\n        </>\n      )}\n    </PathWrapper>\n  );\n};\n\nPathDisplayer.propTypes = {\n  current: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    galleryType: PropTypes.string,\n  }).isRequired,\n  isGallery: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport { Pagination } from '@mui/material';\n\nimport { theme } from 'stylesheet/theme';\nconst { colors, radii, borders } = theme;\n\nexport const PaginationContainer = styled(Pagination)`\n  width: 320px;\n\n  margin-left: auto;\n  margin-right: auto;\n\n  display: flex;\n  justify-content: space-around;\n\n  .MuiPaginationItem-root {\n    margin: 0px;\n    color: ${colors.grey};\n\n    .MuiPaginationItem-icon {\n      fill: ${colors.blue};\n    }\n  }\n\n  & .Mui-selected {\n    color: ${colors.blue};\n    border-color: ${colors.blue} !important;\n    background-color: transparent !important;\n  }\n\n  .MuiPagination-ul {\n    gap: 16px;\n    @media (min-width: 1440px) {\n      gap: 24px;\n    }\n  }\n  .MuiPaginationItem-page {\n    background-color: transparent;\n    width: 40px;\n    height: 40px;\n\n    border: ${borders.normal};\n    border-color: ${colors.grey};\n    border-radius: ${radii.round};\n  }\n\n  .MuiPaginationItem-previousNext {\n    width: 40px;\n    height: 40px;\n    border: ${borders.normal};\n    border-color: ${colors.blue} !important;\n    border-radius: ${radii.round};\n  }\n\n  .Mui-disabled {\n    border-color: ${colors.grey} !important;\n\n    .MuiPaginationItem-icon {\n      fill: ${colors.grey};\n    }\n  }\n  .MuiPaginationItem-ellipsis {\n    width: 40px;\n    height: 40px;\n    border: ${borders.normal};\n    border-color: ${colors.grey};\n    border-radius: ${radii.round};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n  @media (min-width: 768px) {\n    width: 432px;\n\n    .MuiPaginationItem-page {\n      width: 48px;\n      height: 48px;\n    }\n\n    .MuiPaginationItem-previousNext {\n      width: 48px;\n      height: 48px;\n    }\n\n    .MuiPaginationItem-ellipsis {\n      width: 48px;\n      height: 48px;\n    }\n  }\n\n  @media (min-width: 1440px) {\n    width: 592px;\n  }\n`;\n\nexport const ReviewsPaginationList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    flex-wrap: wrap;\n  }\n\n  @media (min-width: 1440px) {\n  }\n`;\n","import { useMediaQuery } from 'react-responsive';\nimport { useEffect, useState } from 'react';\n\nimport useFetch from 'hooks/useFetch';\nimport ReviewSwiperItem from 'components/ReviewSwiperItem/ReviewSwiperItem';\nimport {\n  PaginationContainer,\n  ReviewsPaginationList,\n} from './ReviewsPagination.styled';\n\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\n\nimport PaginationItem from '@mui/material/PaginationItem';\n\nconst ReviewsPagination = () => {\n  const [page, setPage] = useState(1);\n  const [count, setCount] = useState(1);\n\n  const isTabletScreen = useMediaQuery({ minWidth: 768 });\n  const isDesktopScreen = useMediaQuery({ minWidth: 1440 });\n\n  const { data } = useFetch('reviews');\n\n  useEffect(() => {\n    const mobileAndDesktopCeil = Math.ceil(data?.reviewList.length / 3) || 1;\n    const tabletCeil = Math.ceil(data?.reviewList.length / 6) || 1;\n\n    const isTablet = isTabletScreen && !isDesktopScreen;\n\n    isTablet ? setCount(tabletCeil) : setCount(mobileAndDesktopCeil);\n  }, [data?.reviewList.length, isDesktopScreen, isTabletScreen]);\n\n  const handleChange = (_, selectedPage) => {\n    setPage(selectedPage);\n  };\n\n  const renderedData = () => {\n    const isTablet = isTabletScreen && !isDesktopScreen;\n\n    const currentSlidePerPage = isTablet ? 6 : 3;\n\n    return data?.reviewList.slice(\n      page * currentSlidePerPage - currentSlidePerPage,\n      page * currentSlidePerPage\n    );\n  };\n\n  return (\n    <>\n      <ReviewsPaginationList>\n        {renderedData()?.map(({ id, reviewDesc, reviewImage }) => (\n          <li key={id}>\n            <ReviewSwiperItem review={reviewDesc} reviewImage={reviewImage} />\n          </li>\n        ))}\n      </ReviewsPaginationList>\n      <PaginationContainer\n        onChange={handleChange}\n        count={count}\n        boundaryCount={isTabletScreen ? 1 : 1}\n        siblingCount={isTabletScreen ? 0 : -1}\n        renderItem={item => (\n          <PaginationItem\n            slots={{\n              previous: SlArrowLeft,\n              next: SlArrowRight,\n            }}\n            {...item}\n          />\n        )}\n      />\n    </>\n  );\n};\n\nexport default ReviewsPagination;\n","import styled from 'styled-components';\n\nimport { theme } from 'stylesheet/theme';\nconst { colors, radii, borders, fontWeights, fonts, fontSizes, transitions } =\n  theme;\n\nexport const ReviewsPageSection = styled.section`\n  margin-bottom: 36px;\n  @media (min-width: 768px) {\n    margin-bottom: 44px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 64px;\n  }\n`;\nexport const ReviewsPageGradientContainer = styled.div`\n  display: inline-flex;\n  padding: 28px 16px;\n\n  flex-direction: column;\n  justify-content: center;\n\n  gap: 24px;\n\n  border-radius: 16px;\n\n  background: ${colors.gradientBackground};\n\n  margin-bottom: 34px;\n  @media (min-width: 768px) {\n    padding: 32px;\n\n    width: 720px;\n    overflow: hidden;\n    border-radius: ${radii.m};\n    gap: 24px;\n    margin-bottom: 0;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 44px 64px;\n\n    width: 1408px;\n\n    border-radius: ${radii.xl};\n    gap: 44px;\n  }\n`;\n\nexport const ContactUsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-left: 16px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: flex-end;\n    padding-left: 0px;\n  }\n\n  @media (min-width: 1440px) {\n  }\n`;\n\nexport const ContactUsTextContainer = styled.div`\n  margin-bottom: 24px;\n\n  @media (min-width: 768px) {\n    margin-bottom: 0px;\n  }\n\n  @media (min-width: 1440px) {\n  }\n`;\n\nexport const ContactUsHeader = styled.h4`\n  font-weight: ${fontWeights.regular};\n  font-size: 18px;\n  font-family: ${fonts.regular};\n\n  margin-bottom: 12px;\n  @media (min-width: 768px) {\n    font-size: ${fontSizes.m};\n  }\n\n  @media (min-width: 1440px) {\n    font-weight: ${fontWeights.light};\n    font-size: 26px;\n    font-family: ${fonts.light};\n\n    margin-bottom: 16px;\n  }\n`;\n\nexport const ContactUsParagraph = styled.p`\n  font-weight: ${fontWeights.light};\n  font-size: ${fontSizes.xs};\n  font-family: ${fonts.light};\n\n  @media (min-width: 768px) {\n    width: 316px;\n    font-size: ${fontSizes.s};\n  }\n\n  @media (min-width: 1440px) {\n    width: 745px;\n  }\n`;\n\nexport const ContactUsButton = styled.button`\n  width: 327px;\n  height: 40px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  border: ${borders.normal};\n  border-color: ${colors.blue};\n  border-radius: 8px;\n  padding: 10.5px;\n\n  background-color: ${colors.white};\n\n  font-weight: ${fontWeights.light};\n  font-size: ${fontSizes.xs};\n  font-family: ${fonts.light};\n\n  transition: background-color ${transitions.regular},\n    color ${transitions.regular};\n\n  &:hover,\n  &:focus {\n    background-color: ${colors.blue};\n    color: ${colors.white};\n  }\n\n  @media (min-width: 768px) {\n    width: 288px;\n    height: 48px;\n    padding: 12px;\n    font-size: ${fontSizes.s};\n    border-radius: ${radii.s};\n  }\n\n  @media (min-width: 1440px) {\n    width: 440px;\n    height: 76px;\n    padding: 26px;\n\n    border-radius: ${radii.l};\n  }\n`;\n","import { useTranslation } from 'react-i18next';\nimport { useMediaQuery } from 'react-responsive';\nimport { PathDisplayer } from 'components/PathDisplayer/PathDisplayer';\nimport {\n  ReviewsTitle,\n  ReviewsTitlePartContainer,\n} from 'components/Reviews/Reviews.styled';\n\nimport ReviewsPagination from 'components/ReviewsPagination/ReviewsPagination';\nimport {\n  ContactUsButton,\n  ContactUsContainer,\n  ContactUsHeader,\n  ContactUsParagraph,\n  ContactUsTextContainer,\n  ReviewsPageGradientContainer,\n  ReviewsPageSection,\n} from './ReviewsPage.styled';\nimport { useNavigate } from 'react-router';\n\nconst ReviewsPage = () => {\n  const { t } = useTranslation();\n  const isTabletScreen = useMediaQuery({ minWidth: 768 });\n  const isDesktopScreen = useMediaQuery({ minWidth: 1440 });\n  const navigate = useNavigate();\n\n  const onLeaveReviewButtonClick = evt => {\n    evt.preventDefault();\n    navigate('/review');\n  };\n\n  const ContactUs = (\n    <ContactUsContainer>\n      <ContactUsTextContainer>\n        <ContactUsHeader>{t('reviews.write')}</ContactUsHeader>\n        <ContactUsParagraph>\n          {isTabletScreen\n            ? isDesktopScreen\n              ? t('reviews.desktopThanksText')\n              : t('reviews.tabletThanksText')\n            : t('reviews.mobileThanksText')}\n        </ContactUsParagraph>\n      </ContactUsTextContainer>\n      <ContactUsButton\n        type=\"submit\"\n        onClick={evt => onLeaveReviewButtonClick(evt)}\n      >\n        {t('reviews.buttonText')}\n      </ContactUsButton>\n    </ContactUsContainer>\n  );\n\n  return (\n    <>\n      <PathDisplayer current={{ path: '/reviews', name: t('pages.reviews') }} />\n\n      <ReviewsPageSection>\n        <ReviewsPageGradientContainer>\n          <ReviewsTitlePartContainer>\n            <ReviewsTitle>{t('pages.reviews')}</ReviewsTitle>\n          </ReviewsTitlePartContainer>\n          <ReviewsPagination />\n\n          {isTabletScreen && ContactUs}\n        </ReviewsPageGradientContainer>\n\n        {!isTabletScreen && ContactUs}\n      </ReviewsPageSection>\n    </>\n  );\n};\n\nexport default ReviewsPage;\n"],"names":["PathWrapper","styled","theme","spacing","PathLink","Link","fonts","regular","fontWeights","colors","grey","PathArrow","PathDisplayer","current","isGallery","homePage","path","name","t","useTranslation","to","dangerouslySetInnerHTML","__html","href","sprite","galleryType","radii","borders","PaginationContainer","Pagination","blue","normal","round","ReviewsPaginationList","useState","page","setPage","count","setCount","isTabletScreen","useMediaQuery","minWidth","isDesktopScreen","data","useFetch","useEffect","mobileAndDesktopCeil","Math","ceil","reviewList","length","tabletCeil","currentSlidePerPage","slice","renderedData","map","id","reviewDesc","reviewImage","ReviewSwiperItem","review","onChange","_","selectedPage","boundaryCount","siblingCount","renderItem","item","PaginationItem","slots","previous","SlArrowLeft","next","SlArrowRight","fontSizes","transitions","ReviewsPageSection","ReviewsPageGradientContainer","gradientBackground","m","xl","ContactUsContainer","ContactUsTextContainer","ContactUsHeader","light","ContactUsParagraph","xs","s","ContactUsButton","white","l","navigate","useNavigate","ContactUs","type","onClick","evt","preventDefault","onLeaveReviewButtonClick"],"sourceRoot":""}