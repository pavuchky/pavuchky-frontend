{"version":3,"file":"static/js/824.c00a7ef9.chunk.js","mappings":"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","sources":["components/CustomInput/CustomInput.styled.js","components/CustomInput/CustomInput.jsx","components/PathDisplayer/PathDisplayer.styled.js","components/PathDisplayer/PathDisplayer.jsx","hooks/useFetchPost.js","components/PartnersForm/PartnersForm.styled.js","components/PartnersForm/PartnersForm.jsx","pages/PartnersPage/PartnersPage.jsx","utils/validationSchema.js"],"sourcesContent":["import styled, { css } from 'styled-components';\n\nexport const FormText = styled.p`\n  margin-bottom: 12px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  color: ${({ theme }) => theme.colors.black};\n\n  @media (min-width: 768px) {\n    font-family: ${({ theme }) => theme.fonts.light};\n    font-size: ${({ theme }) => theme.fontSizes.s};\n    font-weight: ${({ theme }) => theme.fontWeights.light};\n  }\n`;\n\nexport const FormInput = styled.input`\n  position: relative;\n  width: 100%;\n  height: 23px;\n  padding-bottom: 6px;\n  font-size: 14px;\n  border-color: transparent;\n  background-color: inherit;\n  border-bottom: 1px solid ${({ theme }) => theme.colors.primaryFont};\n\n  ::placeholder {\n    color: #d6d6d6;\n  }\n\n  &:focus {\n    outline-color: ${({ theme }) => theme.colors.blue};\n  }\n\n  ${({ hasValue }) =>\n    hasValue &&\n    css`\n      background-color: rgb(232, 240, 254);\n    `}\n\n  @media (min-width: 768px) {\n    width: 656px;\n    height: 31px;\n    padding-bottom: 0;\n    font-family: ${({ theme }) => theme.fonts.regular};\n    font-size: ${({ theme }) => theme.fontSizes.xs};\n    font-weight: ${({ theme }) => theme.fontWeights.regular};\n    line-height: ${({ theme }) => theme.lineHeights.secondary};\n  }\n\n  @media (min-width: 1440px) {\n    width: 528px;\n  }\n`;\n\nexport const FormValidation = styled.p`\n  position: absolute;\n  font-size: 14px;\n  color: ${({ theme }) => theme.colors.pink};\n`;\n","import PropTypes from 'prop-types';\nimport { FormInput, FormText, FormValidation } from './CustomInput.styled';\n\nexport const CustomInput = ({\n  title,\n  type,\n  name,\n  placeholder,\n  autoComplete,\n  value,\n  onChange,\n  hasValue,\n  touched,\n  error,\n}) => {\n  return (\n    <>\n      <FormText>{title}</FormText>\n      <FormInput\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        autoComplete={autoComplete}\n        value={value}\n        onChange={onChange}\n        hasValue={hasValue}\n      />\n      {touched && error && <FormValidation>{error}</FormValidation>}\n    </>\n  );\n};\n\nCustomInput.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  autoComplete: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  hasValue: PropTypes.bool.isRequired,\n  touched: PropTypes.bool,\n  error: PropTypes.string,\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const PathWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding-left: ${({ theme }) => theme.spacing(4)};\n  margin-bottom: ${({ theme }) => theme.spacing(6.5)};\n\n  @media only screen and (min-width: 768px) {\n    gap: ${({ theme }) => theme.spacing(3)};\n    padding-left: ${({ theme }) => theme.spacing(8)};\n    margin-top: 0;\n    margin-bottom: ${({ theme }) => theme.spacing(11)};\n  }\n\n  @media only screen and (min-width: 1440px) {\n    padding-left: ${({ theme }) => theme.spacing(16)};\n    margin-bottom: ${({ theme }) => theme.spacing(16)};\n  }\n`;\n\nexport const PathLink = styled(Link)`\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n\n  color: ${({ theme }) => theme.colors.grey};\n\n  @media only screen and (min-width: 1440px) {\n    font-size: 14px;\n    line-height: normal;\n  }\n`;\n\nexport const PathArrow = styled.svg`\n  width: 10px;\n  height: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { useTranslation } from 'react-i18next';\nimport { PathArrow, PathLink, PathWrapper } from './PathDisplayer.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nexport const PathDisplayer = ({ current, isGallery = false }) => {\n  const { t } = useTranslation();\n  const homePage = { path: '/', name: t('nav.main') };\n\n  return (\n    <PathWrapper>\n      <PathLink\n        to={homePage.path}\n        dangerouslySetInnerHTML={{ __html: homePage.name }}\n      />\n      <PathArrow>\n        <use href={sprite + '#path-arrow'}></use>\n      </PathArrow>\n      <PathLink\n        to={current.path}\n        dangerouslySetInnerHTML={{ __html: current.name }}\n      />\n\n      {isGallery && (\n        <>\n          <PathArrow>\n            <use href={sprite + '#path-arrow'}></use>\n          </PathArrow>\n          <PathLink\n            to={current.path}\n            dangerouslySetInnerHTML={{ __html: current.galleryType }}\n          />\n        </>\n      )}\n    </PathWrapper>\n  );\n};\n\nPathDisplayer.propTypes = {\n  current: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    galleryType: PropTypes.string,\n  }).isRequired,\n  isGallery: PropTypes.bool,\n};\n","import axios from 'axios';\nimport useLoader from './useLoader';\n\naxios.defaults.baseURL = 'https://pavuchky-backend.onrender.com';\n\nexport const useFetchPost = () => {\n  const { isLoading, setLoading } = useLoader();\n\n  const fetchPost = async (url, data) => {\n    setLoading(true);\n\n    try {\n      const response = await axios.post(url, data);\n      return response.data;\n    } catch (error) {\n      setLoading(false);\n      throw error;\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return { isLoading, fetchPost };\n};\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.div`\n  padding: 28px 16px;\n  margin-bottom: 36px;\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.gradientBackground};\n\n  @media (min-width: 768px) {\n    padding: 32px;\n    border-radius: ${({ theme }) => theme.radii.m};\n    margin-bottom: 44px;\n  }\n\n  @media (min-width: 1440px) {\n    padding: 44px 64px;\n    margin-bottom: 64px;\n    border-radius: ${({ theme }) => theme.radii.xl};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n`;\n\nexport const FormTitle = styled.h3`\n  margin-bottom: 24px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.m};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n\n  @media (min-width: 768px) {\n    font-family: ${({ theme }) => theme.fonts.headRegular};\n    font-size: ${({ theme }) => theme.fontSizes.l};\n    letter-spacing: -1.44px;\n  }\n\n  @media (min-width: 1440px) {\n    margin-bottom: 44px;\n    font-size: ${({ theme }) => theme.fontSizes.xl};\n    letter-spacing: -2.4px;\n  }\n`;\n\nexport const FormList = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  @media (min-width: 768px) {\n    gap: 24px;\n  }\n\n  @media (min-width: 1440px) {\n    position: relative;\n    gap: 36px;\n  }\n`;\n\nexport const FormInfo = styled.p`\n  font-size: 12px;\n  color: ${({ theme }) => theme.colors.grey};\n\n  @media (min-width: 768px) {\n    margin-top: 8px;\n    font-size: 14px;\n  }\n\n  @media (min-width: 1440px) {\n    position: absolute;\n    top: 515px;\n    left: 747px;\n    height: 72px;\n    width: 597px;\n    margin-top: 0px;\n    font-family: ${({ theme }) => theme.fonts.regular};\n    font-size: 16px;\n    font-weight: ${({ theme }) => theme.fontWeights.regular};\n    line-height: ${({ theme }) => theme.lineHeights.secondary};\n  }\n`;\n\nexport const FormBtn = styled.button`\n  width: 100%;\n  height: 40px;\n  padding: 10.5px;\n  text-align: center;\n  border-radius: 12px;\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: ${({ theme }) => theme.fontSizes.xs};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  background: ${({ theme }) => theme.colors.blue};\n  color: ${({ theme }) => theme.colors.white};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.colors.yellow};\n  }\n\n  @media (min-width: 768px) {\n    width: 100%;\n    height: 48px;\n    padding: 9.5px;\n    border-radius: 16px;\n    font-size: ${({ theme }) => theme.fontSizes.m};\n  }\n\n  @media (min-width: 1440px) {\n    max-width: 519px;\n    height: 64px;\n    padding: 17.5px;\n    margin-top: 8px;\n    border-radius: ${({ theme }) => theme.radii.m};\n  }\n`;\n\nexport const SupportImg = styled.img`\n  width: 446px;\n  height: 490px;\n  padding-top: 28px;\n`;\n","import { useState } from 'react';\nimport { useFormik } from 'formik';\nimport { toast } from 'react-toastify';\nimport { useTranslation } from 'react-i18next';\nimport { useMediaQuery } from 'react-responsive';\nimport { useFetchPost } from 'hooks/useFetchPost';\nimport { partnerValidationSchema } from '../../utils/validationSchema';\nimport { CustomInput } from 'components/CustomInput/CustomInput';\nimport heart from '../../assets/images/gratitude/gratitude_tablet.svg';\nimport { Loader } from 'components/Loader/Loader';\nimport {\n  FormBtn,\n  FormContainer,\n  FormInfo,\n  FormList,\n  FormTitle,\n  SupportImg,\n} from './PartnersForm.styled';\nimport { Navigate } from 'react-router-dom';\n\nexport const PartnersForm = () => {\n  const [submitted, setSubmitted] = useState(false);\n\n  const { t } = useTranslation();\n  const { isLoading, fetchPost } = useFetchPost();\n\n  const isDesktop = useMediaQuery({ query: '(min-width: 1440px)' });\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      company: '',\n      email: '',\n      phone: '',\n      comment: '',\n    },\n    validationSchema: partnerValidationSchema(t),\n    onSubmit: async values => {\n      try {\n        await fetchPost('/partners', values);\n        setSubmitted(true);\n        toast.success(t('forms.success'));\n      } catch (error) {\n        setSubmitted(false);\n        toast.error(t('forms.error'));\n      }\n    },\n  });\n  const { name, company, email, phone, comment } = formik.values;\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : submitted ? (\n        <Navigate\n          to=\"/gratitude\"\n          state={{\n            title: `${t('partnerForm.thank')}`,\n            text: `${t('forms.contact')}`,\n            variant: 'primary',\n          }}\n        />\n      ) : (\n        <FormContainer>\n          <div>\n            <FormTitle>{t('forms.data')}</FormTitle>\n            <FormList onSubmit={formik.handleSubmit}>\n              <label>\n                <CustomInput\n                  title={t('forms.name')}\n                  type=\"text\"\n                  name=\"name\"\n                  placeholder={t('forms.namePl')}\n                  autoComplete=\"username\"\n                  value={name}\n                  onChange={formik.handleChange}\n                  hasValue={name.length > 0}\n                  touched={formik.touched.name}\n                  error={formik.errors.name}\n                />\n              </label>\n              <label>\n                <CustomInput\n                  title={t('partnerForm.activity')}\n                  type=\"text\"\n                  name=\"company\"\n                  placeholder={t('partnerForm.activityPl')}\n                  autoComplete=\"off\"\n                  value={company}\n                  onChange={formik.handleChange}\n                  hasValue={company.length > 0}\n                  touched={formik.touched.company}\n                  error={formik.errors.company}\n                />\n              </label>\n              <label>\n                <CustomInput\n                  title=\"E-mail\"\n                  type=\"email\"\n                  name=\"email\"\n                  placeholder=\"ukrain@gmail.com\"\n                  autoComplete=\"username\"\n                  value={email}\n                  onChange={formik.handleChange}\n                  hasValue={email.length > 0}\n                  touched={formik.touched.email}\n                  error={formik.errors.email}\n                />\n              </label>\n              <label>\n                <CustomInput\n                  title={t('forms.number')}\n                  type=\"text\"\n                  name=\"phone\"\n                  placeholder={t('forms.numberPl')}\n                  autoComplete=\"tel\"\n                  value={phone}\n                  onChange={formik.handleChange}\n                  hasValue={phone.length > 0}\n                  touched={formik.touched.phone}\n                  error={formik.errors.phone}\n                />\n              </label>\n              <label>\n                <CustomInput\n                  title={t('forms.comments')}\n                  type=\"text\"\n                  name=\"comment\"\n                  placeholder={t('forms.commentsPl')}\n                  autoComplete=\"off\"\n                  value={comment}\n                  onChange={formik.handleChange}\n                  hasValue={comment.length > 0}\n                />\n              </label>\n              <FormInfo>{t('forms.info')}</FormInfo>\n              <FormBtn type=\"submit\">{t('forms.submit')}</FormBtn>\n            </FormList>\n          </div>\n          {isDesktop && <SupportImg src={heart} alt=\"support\" />}\n        </FormContainer>\n      )}\n    </>\n  );\n};\n","import { PartnersForm } from 'components/PartnersForm/PartnersForm';\nimport { PathDisplayer } from 'components/PathDisplayer/PathDisplayer';\nimport { useTranslation } from 'react-i18next';\n\nconst PartnersPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PathDisplayer\n        current={{ path: '/partners', name: t('pages.partnership') }}\n      />\n      <PartnersForm />\n    </>\n  );\n};\n\nexport default PartnersPage;\n","import * as Yup from 'yup';\n\nconst PHONE_REGEXP = /^\\+380\\d{9}$|^\\+380\\d{2}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$/;\n\nconst PHONE_REGEXP_PARTNER =\n  /^\\+\\d{1,3}\\s?\\d{2,3}\\s?\\d{3}\\s?\\d{2}\\s?\\d{2}$|^\\+\\d{10,12}$/;\n\nconst EMAIL_REGEXP = /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$/;\n\nexport const partnerValidationSchema = t =>\n  Yup.object().shape({\n    name: Yup.string()\n      .required(t('validation.name'))\n      .matches(/^[A-Za-zА-Яа-яЁёІіЇї\\s]+$/, t('validation.containName'))\n      .test('is-not-empty', t('validation.empty'), value => {\n        return !/^\\s+$/.test(value);\n      }),\n    company: Yup.string()\n      .min(3, t('validation.atLeast'))\n      .required(t('validation.fill'))\n      .test('is-not-empty', t('validation.empty'), value => {\n        return !/^\\s+$/.test(value);\n      }),\n    email: Yup.string()\n      .matches(EMAIL_REGEXP, t('validation.incorrectEmail'))\n      .required(t('validation.email')),\n    phone: Yup.string()\n      .required(t('validation.phone'))\n      .matches(PHONE_REGEXP_PARTNER, t('validation.invalidPhonePartner')),\n  });\n\nexport const orderValidationSchema = t =>\n  Yup.object().shape({\n    name: Yup.string()\n      .required(t('validation.name'))\n      .matches(/^[A-Za-zА-Яа-яЁёІіЇї\\s]+$/, t('validation.containName'))\n      .test('is-not-empty', t('validation.empty'), value => {\n        return !/^\\s+$/.test(value);\n      }),\n    phone: Yup.string()\n      .required(t('validation.phone'))\n      .matches(PHONE_REGEXP, t('validation.invalidPhone')),\n    gridSize: Yup.string()\n      .required(t('validation.fill'))\n      .test('is-not-empty', t('validation.empty'), value => {\n        return !/^\\s+$/.test(value);\n      }),\n    typeBase: Yup.string().required(t('validation.fill')),\n    material: Yup.string().required(t('validation.fill')),\n    color: Yup.string()\n      .required(t('validation.fill'))\n      .test('is-color-valid', t('validation.color'), value => {\n        if (/^\\d+%?$/.test(value) || /^\\s+$/.test(value)) {\n          return false;\n        }\n        return true;\n      }),\n    loops: Yup.string().required(t('validation.fill')),\n  });\n\nexport const reviewValidationSchema = t =>\n  Yup.object().shape({\n    name: Yup.string()\n      .required(t('validation.name'))\n      .matches(/^[A-Za-zА-Яа-яЁёІіЇї\\s]+$/, t('validation.containName'))\n      .test('is-not-empty', t('validation.empty'), value => {\n        return !/^\\s+$/.test(value);\n      }),\n    email: Yup.string()\n      .matches(EMAIL_REGEXP, t('validation.incorrectEmail'))\n      .required(t('validation.email')),\n    comment: Yup.string()\n      .required(t('validation.review'))\n      .test('is-not-empty', t('validation.reviewEmpty'), value => {\n        return !/^\\s+$/.test(value);\n      }),\n  });\n"],"names":["FormText","styled","theme","fonts","regular","fontSizes","xs","fontWeights","colors","black","light","s","FormInput","primaryFont","blue","hasValue","css","lineHeights","secondary","FormValidation","pink","CustomInput","title","type","name","placeholder","autoComplete","value","onChange","touched","error","PathWrapper","spacing","PathLink","Link","grey","PathArrow","PathDisplayer","current","isGallery","homePage","path","t","useTranslation","to","dangerouslySetInnerHTML","__html","href","sprite","galleryType","axios","useFetchPost","useLoader","isLoading","setLoading","fetchPost","url","data","response","FormContainer","gradientBackground","radii","m","xl","FormTitle","headRegular","l","FormList","FormInfo","FormBtn","white","yellow","SupportImg","PartnersForm","useState","submitted","setSubmitted","isDesktop","useMediaQuery","query","formik","useFormik","initialValues","company","email","phone","comment","validationSchema","partnerValidationSchema","onSubmit","values","toast","Loader","state","text","variant","handleSubmit","handleChange","length","errors","src","heart","alt","PHONE_REGEXP","PHONE_REGEXP_PARTNER","EMAIL_REGEXP","Yup","shape","required","matches","test","min","orderValidationSchema","gridSize","typeBase","material","color","loops","reviewValidationSchema"],"sourceRoot":""}