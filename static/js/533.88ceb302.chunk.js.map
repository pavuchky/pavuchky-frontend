{"version":3,"file":"static/js/533.88ceb302.chunk.js","mappings":"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","sources":["components/GalleryPhotos/GalleryPhotoTablet.styled.js","components/GalleryPhotos/ImageModal.jsx","components/GalleryPhotos/MobGalleryPhotos.jsx","components/GalleryPhotos/MuiPagnation.styled.js","components/GalleryPhotos/GalleryPhotoTablet.jsx","components/GalleryPhotos/GalleryPhotos.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport { theme } from '../../stylesheet/theme';\n\nconst { fontSizes, fontWeights, colors, fonts, borders, radii } = theme;\n\nexport const GalleryTabGridContainer = styled.ul`\n  display: flex;\n  gap: 24px;\n  flex-wrap: wrap;\n  margin-bottom: 32px;\n  justify-content: center;\n`;\n\nexport const GalleryItem = styled.li`\n  display: flex;\n  flex-basis: calc((100% - 24px) / 2);\n`;\n\nexport const GalleryTabImg = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: middle;\n  border-radius: 10px;\n`;\n\nexport const GalleryTabButton = styled.button`\n  width: 656px;\n  height: 48px;\n  border-radius: 16px;\n  background: ${colors.blue};\n  padding: 10px;\n  justify-content: center;\n  align-items: center;\n  font-family: ${fonts.regular};\n  font-size: ${fontSizes.m};\n  font-style: normal;\n  font-weight: ${fontWeights.regular};\n  line-height: normal;\n  cursor: pointer;\n  outline: transparent;\n  color: ${colors.white};\n\n  &:hover {\n    color: ${colors.yellow};\n  }\n  &:focus {\n    outline: transparent;\n    color: ${colors.yellow};\n  }\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\n/**==============StylesForDesktop======================== */\n\nexport const GalleryDesktopGridContainer = styled.ul`\n  display: flex;\n  gap: 26px;\n  flex-wrap: wrap;\n  margin-bottom: 44px;\n  justify-content: center;\n`;\n\nexport const GalleryDesktopItem = styled.li`\n  display: flex;\n  flex-basis: calc((100% - 52px) / 3);\n  justify-content: center;\n`;\n\nexport const GalleryDesktopImg = styled.img`\n  width: 100%;\n  height: auto;\n  object-fit: cover;\n  vertical-align: middle;\n  border-radius: 10px;\n`;\n\nexport const GalleryPaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const GalleryFirstSvgButton = styled.button`\n  display: none;\n\n  @media (min-width: 1440px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 84px;\n    height: 84px;\n    border: ${borders.normal};\n    color: ${colors.blue};\n    border-radius: ${radii.round};\n    position: absolute;\n    top: 50%;\n    left: 3%;\n    z-index: 99999999;\n  }\n`;\n\nexport const GallerySecondSvgButton = styled.button`\n  display: none;\n\n  @media (min-width: 1440px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 84px;\n    height: 84px;\n    border: ${borders.normal};\n    color: ${colors.blue};\n    border-radius: ${radii.round};\n    position: absolute;\n    top: 50%;\n    right: 3%;\n    z-index: 99999999;\n  }\n`;\n\nexport const GalleryDesktopSvg = styled.svg`\n  stroke: ${colors.blue};\n`;\n","import { useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport useFetch from '../../hooks/useFetch';\n\nimport PropTypes from 'prop-types';\nimport {\n  ImageModalOverlay,\n  ImageModalContent,\n  GlobalStyles,\n  LightBoxImgContainer,\n  LightBoxImg,\n} from './MobGalleryPhotos.styled';\n\nimport {\n  GalleryFirstSvgButton,\n  GallerySecondSvgButton,\n  GalleryDesktopSvg,\n} from './GalleryPhotoTablet.styled';\nimport sprite from '../../assets/images/sprite.svg';\n\nconst ImageModal = ({\n  isOpen,\n  selectedImageIndex,\n  onClose,\n  setSelectedImageIndex,\n}) => {\n  const { data } = useFetch('galleryPhoto');\n\n  useEffect(() => {\n    if (isOpen) {\n      document.body.classList.add('modal-open');\n    } else {\n      document.body.classList.remove('modal-open');\n    }\n  }, [isOpen]);\n\n  if (!isOpen) return null;\n\n  const handleOverlayClick = event => {\n    console.log(event.target.nodeName);\n\n    if (event.target === event.currentTarget) {\n      onClose();\n    }\n  };\n\n  const onCarouselClick = evt => {\n    if (evt.target.nodeName === 'LI') {\n      onClose();\n    }\n  };\n\n  return ReactDOM.createPortal(\n    <>\n      <GlobalStyles />\n      <ImageModalOverlay onClick={handleOverlayClick}>\n        <ImageModalContent onClick={onCarouselClick}>\n          <Carousel\n            selectedItem={selectedImageIndex}\n            showThumbs={false}\n            showStatus={false}\n            showIndicators={false}\n            showArrows={true}\n            dynamicHeight={true}\n            infiniteLoop={true}\n            onChange={setSelectedImageIndex}\n            onCloseClick={onClose}\n            renderArrowPrev={(onClickHandler, hasPrev) =>\n              hasPrev && (\n                <GalleryFirstSvgButton type=\"button\" onClick={onClickHandler}>\n                  <GalleryDesktopSvg width=\"17px\" height=\"32px\">\n                    <use xlinkHref={`${sprite}#prew-icon`}></use>\n                  </GalleryDesktopSvg>\n                </GalleryFirstSvgButton>\n              )\n            }\n            renderArrowNext={(onClickHandler, hasNext) =>\n              hasNext && (\n                <GallerySecondSvgButton type=\"button\" onClick={onClickHandler}>\n                  <GalleryDesktopSvg width=\"17px\" height=\"32px\">\n                    <use xlinkHref={`${sprite}#next-icon`}></use>\n                  </GalleryDesktopSvg>\n                </GallerySecondSvgButton>\n              )\n            }\n          >\n            {data?.galleryPhotoList?.map(photo => {\n              return (\n                <LightBoxImgContainer key={photo.id}>\n                  <LightBoxImg\n                    src={photo.photoLink}\n                    alt=\"Warriors and camouflage nets\"\n                  />\n                </LightBoxImgContainer>\n              );\n            })}\n          </Carousel>\n        </ImageModalContent>\n      </ImageModalOverlay>\n    </>,\n    document.getElementById('modal-root')\n  );\n};\n\nImageModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  selectedImageIndex: PropTypes.number.isRequired,\n  onClose: PropTypes.func.isRequired,\n  setSelectedImageIndex: PropTypes.func,\n};\n\nexport default ImageModal;\n","import React, { useState } from 'react';\nimport useFetch from '../../hooks/useFetch';\n\nimport 'swiper/css/bundle';\nimport { Scrollbar } from 'swiper';\n\nimport {\n  GallerySwiperSlideContainer,\n  GallerySwiperContainer,\n  SwiperImg,\n} from './MobGalleryPhotos.styled';\n\nimport ImageModal from './ImageModal';\n\nconst MobGalleryPhotos = () => {\n  const { data } = useFetch('galleryPhoto');\n\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n\n  const openLightbox = index => {\n    setSelectedImageIndex(index);\n    setLightboxOpen(true);\n  };\n\n  const closeLightbox = () => {\n    setLightboxOpen(false);\n  };\n\n  return (\n    <>\n      <GallerySwiperContainer\n        spaceBetween={16}\n        slidesPerView={1.3}\n        scrollbar={{ draggable: true }}\n        modules={[Scrollbar]}\n      >\n        {data?.galleryPhotoList?.map((photoLink, index) => {\n          return (\n            <GallerySwiperSlideContainer\n              key={index}\n              onClick={() => openLightbox(index)}\n            >\n              <SwiperImg src={photoLink.photoLink} alt=\"Varior\" />\n            </GallerySwiperSlideContainer>\n          );\n        })}\n      </GallerySwiperContainer>\n\n      <ImageModal\n        isOpen={lightboxOpen}\n        images={data}\n        selectedImageIndex={selectedImageIndex}\n        onClose={closeLightbox}\n      />\n    </>\n  );\n};\n\nexport default MobGalleryPhotos;\n","import styled from 'styled-components';\n\nimport { theme } from '../../stylesheet/theme';\nimport { Pagination } from '@mui/material';\n\nconst { fontSizes, fontWeights, colors, fonts, borders, radii } = theme;\n\nexport const GalleryPagination = styled(Pagination)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n\n  .MuiPaginationItem-root {\n    margin: 0px 24px 0px 0px;\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n    color: ${colors.grey};\n    font-size: ${fontSizes.s} !important;\n    font-family: ${fonts.regular} !important;\n    font-weight: ${fontWeights.light};\n    padding: 0;\n\n    .MuiPaginationItem-icon {\n      fill: ${colors.blue};\n    }\n  }\n\n  & .Mui-Selected {\n    color: ${colors.blue};\n    border-color: ${colors.blue} !important;\n    background-color: transparent !important;\n\n    .Mui-disabled {\n      border-color: ${colors.grey} !important;\n      .MuiPaginationItem-root.MuiPaginationItem-icon.Mui-disabled {\n        fill: ${colors.grey} !important;\n      }\n    }\n  }\n\n  .MuiPaginationItem-previousNext {\n    border: ${borders.normal};\n    border-color: ${colors.blue} !important;\n    border-radius: ${radii.round};\n  }\n`;\n","import { useState } from 'react';\nimport { PaginationItem } from '@mui/material';\nimport { useMediaQuery } from 'react-responsive';\nimport { useTranslation } from 'react-i18next';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\n\nimport useFetch from '../../hooks/useFetch';\nimport ImageModal from './ImageModal';\n\nimport {\n  GalleryTabGridContainer,\n  GalleryTabButton,\n  GalleryTabImg,\n  GalleryDesktopImg,\n  GalleryPaginationContainer,\n  GalleryDesktopGridContainer,\n  GalleryItem,\n  GalleryDesktopItem,\n} from './GalleryPhotoTablet.styled';\nimport { GalleryPagination } from './MuiPagnation.styled';\n\nconst GalleryTabPhotos = () => {\n  const { data } = useFetch('galleryPhoto');\n  \n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [lightboxOpen, setLightboxOpen] = useState(false);\n  const [selectedImageIndex, setSelectedImageIndex] = useState(0);\n  const [visibleImages, setVisibleImages] = useState(6);\n\n  const itemsPerPage = 9;\n  const isDesktopScreen = useMediaQuery({ minWidth: 1440 });\n  const isTabletScreen = useMediaQuery({ minWidth: 768 });\n\n  const { t } = useTranslation();\n  const loadMoreImages = () => {\n    setVisibleImages(prevVisibleImages => prevVisibleImages + 6);\n  };\n\n  const openLightbox = index => {\n    setSelectedImageIndex(index);\n    setLightboxOpen(true);\n  };\n\n  const closeLightbox = () => {\n    setLightboxOpen(false);\n  };\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const showingImages = data?.galleryPhotoList?.slice(\n    startIndex,\n    startIndex + itemsPerPage\n  );\n  const onPageChange = (event, newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <>\n      {!isDesktopScreen && isTabletScreen && (\n        <>\n          <GalleryTabGridContainer>\n            {data?.galleryPhotoList\n              ?.slice(0, visibleImages)\n              .map((photo, index) => {\n                return (\n                  <GalleryItem key={photo.id}>\n                    <GalleryTabImg\n                      src={photo.photoLink}\n                      alt=\"Warriors and camouflage nets\"\n                      onClick={() => openLightbox(index)}\n                    />\n                  </GalleryItem>\n                );\n              })}\n          </GalleryTabGridContainer>\n\n          <ImageModal\n            isOpen={lightboxOpen}\n            images={data}\n            selectedImageIndex={selectedImageIndex}\n            onClose={closeLightbox}\n          />\n\n          {visibleImages < data?.galleryPhotoList.length && (\n            <GalleryTabButton onClick={loadMoreImages}>\n              {t('buttons.viewMore')}\n            </GalleryTabButton>\n          )}\n        </>\n      )}\n\n      <>\n        {isDesktopScreen && (\n          <>\n            <GalleryDesktopGridContainer>\n              {showingImages?.map((photo, index) => {\n                return (\n                  <GalleryDesktopItem key={photo.id}>\n                    <GalleryDesktopImg\n                      src={photo.photoLink}\n                      alt=\"Warriors and camouflage nets\"\n                      onClick={() => openLightbox(index)}\n                    />\n                  </GalleryDesktopItem>\n                );\n              })}\n            </GalleryDesktopGridContainer>\n\n            <ImageModal\n              isOpen={lightboxOpen}\n              images={data}\n              selectedImageIndex={selectedImageIndex}\n              onClose={closeLightbox}\n            />\n\n            <GalleryPaginationContainer>\n              <GalleryPagination\n                count={Math.ceil(\n                  (data?.galleryPhotoList?.length || 0) / itemsPerPage\n                )}\n                page={currentPage}\n                onChange={onPageChange}\n                color=\"primary\"\n                variant=\"outlined\"\n                boundaryCount={1}\n                siblingCount={0}\n                renderItem={item => (\n                  <PaginationItem\n                    slots={{\n                      previous: SlArrowLeft,\n                      next: SlArrowRight,\n                    }}\n                    {...item}\n                  />\n                )}\n              />\n            </GalleryPaginationContainer>\n          </>\n        )}\n      </>\n    </>\n  );\n};\n\nexport default GalleryTabPhotos;\n","import { useMediaQuery } from 'react-responsive';\nimport MobGalleryPhotos from './MobGalleryPhotos';\nimport GalleryTabPhotos from './GalleryPhotoTablet';\n\nconst GalleryPhotos = () => {\n  const isTabletScreen = useMediaQuery({ minWidth: 767 });\n\n  return <>{!isTabletScreen ? <MobGalleryPhotos /> : <GalleryTabPhotos />}</>;\n\n};\n\nexport default GalleryPhotos;\n"],"names":["fontSizes","theme","fontWeights","colors","fonts","borders","radii","GalleryTabGridContainer","styled","GalleryItem","GalleryTabImg","GalleryTabButton","blue","regular","m","white","yellow","GalleryDesktopGridContainer","GalleryDesktopItem","GalleryDesktopImg","GalleryPaginationContainer","GalleryFirstSvgButton","normal","round","GallerySecondSvgButton","GalleryDesktopSvg","isOpen","selectedImageIndex","onClose","setSelectedImageIndex","data","useFetch","useEffect","document","body","classList","add","remove","ReactDOM","onClick","event","console","log","target","nodeName","currentTarget","evt","selectedItem","showThumbs","showStatus","showIndicators","showArrows","dynamicHeight","infiniteLoop","onChange","onCloseClick","renderArrowPrev","onClickHandler","hasPrev","type","width","height","xlinkHref","sprite","renderArrowNext","hasNext","galleryPhotoList","map","photo","src","photoLink","alt","id","getElementById","useState","lightboxOpen","setLightboxOpen","spaceBetween","slidesPerView","scrollbar","draggable","modules","Scrollbar","index","openLightbox","images","GalleryPagination","Pagination","grey","s","light","currentPage","setCurrentPage","visibleImages","setVisibleImages","isDesktopScreen","useMediaQuery","minWidth","isTabletScreen","t","useTranslation","closeLightbox","startIndex","showingImages","slice","length","prevVisibleImages","count","Math","ceil","page","newPage","color","variant","boundaryCount","siblingCount","renderItem","item","PaginationItem","slots","previous","SlArrowLeft","next","SlArrowRight"],"sourceRoot":""}