{"version":3,"file":"static/js/703.b5ce6ffd.chunk.js","mappings":"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","sources":["components/PathDisplayer/PathDisplayer.styled.js","components/PathDisplayer/PathDisplayer.jsx","components/Reports/Reports.styled.js","components/Reports/Reports.jsx","pages/ReportingPage/ReportingPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const PathWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing(2)};\n  padding-left: ${({ theme }) => theme.spacing(4)};\n  margin-bottom: ${({ theme }) => theme.spacing(6.5)};\n\n  @media only screen and (min-width: 768px) {\n    gap: ${({ theme }) => theme.spacing(3)};\n    padding-left: ${({ theme }) => theme.spacing(8)};\n    margin-top: 0;\n    margin-bottom: ${({ theme }) => theme.spacing(11)};\n  }\n\n  @media only screen and (min-width: 1440px) {\n    padding-left: ${({ theme }) => theme.spacing(16)};\n    margin-bottom: ${({ theme }) => theme.spacing(16)};\n  }\n`;\n\nexport const PathLink = styled(Link)`\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-weight: ${({ theme }) => theme.fontWeights.regular};\n  font-size: 12px;\n  line-height: 1.33;\n\n  color: ${({ theme }) => theme.colors.grey};\n\n  @media only screen and (min-width: 1440px) {\n    font-size: 14px;\n    line-height: normal;\n  }\n`;\n\nexport const PathArrow = styled.svg`\n  width: 10px;\n  height: 12px;\n`;\n","import { useTranslation } from 'react-i18next';\nimport { PathArrow, PathLink, PathWrapper } from './PathDisplayer.styled';\nimport sprite from 'assets/images/sprite.svg';\n\nexport const PathDisplayer = ({ current, isGallery, galleryType }) => {\n  const { t } = useTranslation();\n  const homePage = { path: '/', name: t('nav.main') };\n\n  return (\n    <PathWrapper>\n      <PathLink\n        to={homePage.path}\n        dangerouslySetInnerHTML={{ __html: homePage.name }}\n      />\n      <PathArrow>\n        <use href={sprite + '#path-arrow'}></use>\n      </PathArrow>\n      <PathLink\n        to={current.path}\n        dangerouslySetInnerHTML={{ __html: current.name }}\n      />\n\n      {isGallery && (\n        <>\n          <PathArrow>\n            <use href={sprite + '#path-arrow'}></use>\n          </PathArrow>\n          <PathLink\n            to={current.path}\n            dangerouslySetInnerHTML={{ __html: current.galleryType }}\n          />\n        </>\n      )}\n    </PathWrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ReportsSection = styled.section`\n  padding: 28px 16px 24px;\n  margin-bottom: 36px;\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.gradientBackground};\n  @media only screen and (min-width: 768px) {\n    padding: 32px;\n    margin-bottom: 44px;\n  }\n  @media only screen and (min-width: 1440px) {\n    padding: 44px 64px;\n    margin-bottom: 64px;\n  }\n`;\n\nexport const ReportTextWrapper = styled.div`\n  margin-bottom: 28px;\n  text-align: left;\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 24px;\n  }\n  @media only screen and (min-width: 1440px) {\n    margin-bottom: 44px;\n  }\n`;\n\nexport const ReportTitle = styled.h3`\n  display: inline-block;\n  margin-bottom: 24px;\n  color: ${({ theme }) => theme.colors.primaryFont};\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 24px;\n  font-weight: 400;\n  @media only screen and (min-width: 768px) {\n    color: ${({ theme }) => theme.colors.primaryFont};\n    font-family: ${({ theme }) => theme.fonts.headRegular};\n    font-size: 36px;\n    font-weight: 400;\n    letter-spacing: -1.44px;\n  }\n  @media only screen and (min-width: 1440px) {\n    font-size: 60px;\n    font-weight: 400;\n    letter-spacing: -2.4px;\n  }\n`;\n\nexport const ReportText = styled.p`\n  color: ${({ theme }) => theme.colors.secondaryFont};\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 14px;\n  font-weight: 400;\n  @media only screen and (min-width: 768px) {\n    display: block;\n    width: 259px;\n    font-family: ${({ theme }) => theme.fonts.light};\n    font-weight: 300;\n  }\n  @media only screen and (min-width: 1440px) {\n    width: 514px;\n    font-family: ${({ theme }) => theme.fonts.regular};\n    font-size: 20px;\n    font-weight: 400;\n  }\n`;\n\nexport const ReportsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 24px;\n\n  @media only screen and (min-width: 768px) {\n    gap: 0px;\n  }\n`;\n\nexport const ReportsListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  gap: 15.5px;\n  padding-bottom: 24px;\n  color: ${({ theme }) => theme.colors.primaryFont};\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondaryFont};\n\n  &:last-child {\n    border-bottom: none;\n    padding-bottom: 0px;\n  }\n\n  @media only screen and (min-width: 768px) {\n    padding: 12px 0;\n    flex-direction: row;\n    gap: 0px;\n    align-items: center;\n    justify-content: space-between;\n\n    &:first-child {\n      border-top: 1px solid ${({ theme }) => theme.colors.secondaryFont};\n    }\n    &:last-child {\n      border-bottom: 1px solid ${({ theme }) => theme.colors.secondaryFont};\n      padding: 12px 0;\n    }\n  }\n\n  @media only screen and (min-width: 1440px) {\n    gap: 44px;\n    padding: 24px 0;\n    &:first-child {\n      border-top: 1px solid ${({ theme }) => theme.colors.secondaryFont};\n    }\n\n    &:last-child {\n      padding: 24px 0;\n    }\n  }\n`;\n\nexport const ReportsListItemTitle = styled.h4`\n  color: ${({ theme }) => theme.colors.primaryFont};\n  font-family: ${({ theme }) => theme.fonts.regular};\n  font-size: 16px;\n  font-weight: 400;\n  @media only screen and (min-width: 768px) {\n    &:first-child {\n      width: 27%;\n    }\n\n    font-size: 18px;\n    font-weight: 400;\n  }\n\n  @media only screen and (min-width: 1440px) {\n    &:first-child {\n      width: 50%;\n    }\n    font-family: ${({ theme }) => theme.fonts.light};\n    font-size: 26px;\n    font-weight: 300;\n  }\n`;\n\nexport const ReportsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 15.5px;\n  @media only screen and (min-width: 768px) {\n    gap: 16px;\n  }\n`;\n\nexport const ReportsButtonWrapper = styled.a`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 16px;\n  transition: all 0.3s ease;\n  transition: transform 1s ease;\n\n  &:hover > p,\n  &:focus > p {\n    color: ${({ theme }) => theme.colors.lightBlue};\n    transform: scale(1.1);\n  }\n\n  &:hover > svg,\n  &:focus > svg {\n    color: ${({ theme }) => theme.colors.lightBlue};\n    stroke: ${({ theme }) => theme.colors.lightBlue};\n    transform: scale(1.1);\n  }\n`;\n\nexport const ReportName = styled.p`\n  display: inline-block;\n  width: 167px;\n  font-family: ${({ theme }) => theme.fonts.light};\n  font-size: 14px;\n  font-weight: 300;\n\n  transition: color 0.3s ease;\n  transition: transform 1s ease;\n  @media only screen and (min-width: 768px) {\n    width: auto;\n\n    color: ${({ theme }) => theme.colors.primaryFont};\n    font-size: 18px;\n    font-weight: 300;\n  }\n  @media only screen and (min-width: 1440px) {\n    &:first-child {\n      text-align: right;\n    }\n\n    color: ${({ theme }) => theme.colors.secondaryFont};\n    font-size: 20px;\n    font-weight: 300;\n  }\n`;\n\nexport const ReportIconArrow = styled.svg`\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  stroke: ${({ theme }) => theme.colors.blue};\n  transition: stroke 0.3s ease;\n  transition: transform 1s ease;\n`;\n\nexport const LoadMoreWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 24px;\n`;\n\nexport const LoadIconArrow = styled.svg`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  transform: rotate(90deg);\n  stroke: ${({ theme }) => theme.colors.blue};\n  transition: stroke 0.3s ease;\n\n  &:hover,\n  &:focus {\n    stroke: ${({ theme }) => theme.colors.lightBlue};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 65px;\n    height: 65px;\n  }\n`;\n\nexport const CollapseIconArrow = styled.svg`\n  display: inline-block;\n  width: 50px;\n  height: 50px;\n  margin-left: 15px;\n  transform: rotate(-90deg);\n  stroke: ${({ theme }) => theme.colors.blue};\n  transition: stroke 0.3s ease;\n\n  &:hover,\n  &:focus {\n    stroke: ${({ theme }) => theme.colors.lightBlue};\n  }\n\n  @media only screen and (min-width: 768px) {\n    width: 65px;\n    height: 65px;\n  }\n`;\n","import { useState, useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useFetch from 'hooks/useFetch';\nimport { LanguageContext } from 'utils/LanguageContext';\nimport sprite from '../../assets/images/sprite.svg';\nimport {\n  CollapseIconArrow,\n  LoadIconArrow,\n  LoadMoreWrapper,\n  ReportIconArrow,\n  ReportName,\n  ReportText,\n  ReportTextWrapper,\n  ReportTitle,\n  ReportsButtonWrapper,\n  ReportsList,\n  ReportsListItem,\n  ReportsListItemTitle,\n  ReportsSection,\n  ReportsWrapper,\n} from './Reports.styled';\n\nconst reportsArr = [\n  { id: '1', month: 'Лютий 2023' },\n  { id: '2', month: 'Січень 2023' },\n  { id: '3', month: 'Грудень 2022' },\n  { id: '4', month: 'Листопад 2022' },\n  { id: '5', month: 'Жовтень 2022' },\n  { id: '6', month: 'Вересень 2022' },\n  { id: '7', month: 'Серпень 2022' },\n  { id: '8', month: 'Липень 2022' },\n  { id: '9', month: 'Червень 2022' },\n  { id: '10', month: 'Травень 2022' },\n  { id: '11', month: 'Квітень 2022' },\n  { id: '12', month: 'Березень 2022' },\n  { id: '13', month: 'Лютий 2022' },\n  { id: '14', month: 'Січень 2022' },\n  { id: '15', month: 'Грудень 2021' },\n  { id: '16', month: 'Листопад 2021' },\n  { id: '17', month: 'Жовтень 2021' },\n  { id: '18', month: 'Вересень 2021' },\n];\n\nconst Reports = () => {\n  const rowsToShow = 6;\n  const [nextNumber, setNextNumber] = useState(rowsToShow);\n\n  const { lang } = useContext(LanguageContext);\n  const { data } = useFetch('reporting');\n  const { t } = useTranslation();\n\n  const handleLoadMore = () => {\n    setNextNumber(nextNumber + rowsToShow);\n  };\n\n  const handleCollapse = () => {\n    setNextNumber(nextNumber - rowsToShow);\n  };\n\n  return (\n    <>\n      <ReportsSection>\n        <ReportTextWrapper>\n          <ReportTitle>{t('reporting.reports')}</ReportTitle>\n          <ReportText>{t('reporting.trust')}</ReportText>\n        </ReportTextWrapper>\n        <ReportsList>\n          {data?.reportingList?.slice(0, nextNumber).map(el => (\n            <ReportsListItem key={el?.id}>\n              <ReportsListItemTitle>\n                {el?.reportingMonth[lang]}\n              </ReportsListItemTitle>\n              <ReportsWrapper>\n                <ReportsButtonWrapper\n                  href={el?.financialReport}\n                  target=\"_blank\"\n                >\n                  <ReportName>{t('reporting.finances')}</ReportName>\n                  <ReportIconArrow>\n                    <use href={`${sprite}#arrow-up-blue`}></use>\n                  </ReportIconArrow>\n                </ReportsButtonWrapper>\n              </ReportsWrapper>\n              <ReportsWrapper>\n                <ReportsButtonWrapper href={el?.resultsReport} target=\"_blank\">\n                  <ReportName>{t('reporting.results')}</ReportName>\n                  <ReportIconArrow>\n                    <use href={`${sprite}#arrow-up-blue`}></use>\n                  </ReportIconArrow>\n                </ReportsButtonWrapper>\n              </ReportsWrapper>\n            </ReportsListItem>\n          ))}\n\n          {/* this line is only for testing purposes */}\n          {reportsArr?.slice(0, nextNumber - 1).map(el => (\n            <ReportsListItem key={el.id}>\n              <ReportsListItemTitle>{el?.month}</ReportsListItemTitle>\n              <ReportsWrapper>\n                <ReportsButtonWrapper\n                  href={data?.reportingList[0]?.financialReport}\n                  target=\"_blank\"\n                >\n                  <ReportName>Фінансовий звіт</ReportName>\n                  <ReportIconArrow>\n                    <use href={`${sprite}#arrow-up-blue`}></use>\n                  </ReportIconArrow>\n                </ReportsButtonWrapper>\n              </ReportsWrapper>\n              <ReportsWrapper>\n                <ReportsButtonWrapper\n                  href={data?.reportingList[0]?.resultsReport}\n                  target=\"_blank\"\n                >\n                  <ReportName>Звіт про результати</ReportName>\n                  <ReportIconArrow>\n                    <use href={`${sprite}#arrow-up-blue`}></use>\n                  </ReportIconArrow>\n                </ReportsButtonWrapper>\n              </ReportsWrapper>\n            </ReportsListItem>\n          ))}\n        </ReportsList>\n        <LoadMoreWrapper>\n          {(nextNumber < data?.reportingList.length ||\n            nextNumber < reportsArr.length) && (\n            <button type=\"button\" onClick={handleLoadMore}>\n              <LoadIconArrow>\n                <use href={`${sprite}#arrow-up-blue`}></use>\n              </LoadIconArrow>\n            </button>\n          )}\n          {nextNumber > 6 ? (\n            <button type=\"button\" onClick={handleCollapse}>\n              <CollapseIconArrow>\n                <use href={`${sprite}#arrow-up-blue`}></use>\n              </CollapseIconArrow>\n            </button>\n          ) : null}\n        </LoadMoreWrapper>\n      </ReportsSection>\n    </>\n  );\n};\n\nexport default Reports;\n","import { useTranslation } from 'react-i18next';\nimport { PathDisplayer } from 'components/PathDisplayer/PathDisplayer';\n\nimport Reports from 'components/Reports/Reports';\n\nconst ReportingPage = () => {\n  const { t } = useTranslation();\n\n  return (\n    <>\n      <PathDisplayer\n        current={{ path: '/reporting', name: t('nav.reporting') }}\n      />\n      <Reports />\n    </>\n  );\n};\n\nexport default ReportingPage;\n"],"names":["PathWrapper","styled","theme","spacing","PathLink","Link","fonts","regular","fontWeights","colors","grey","PathArrow","PathDisplayer","current","isGallery","homePage","galleryType","path","name","t","useTranslation","to","dangerouslySetInnerHTML","__html","href","sprite","ReportsSection","gradientBackground","ReportTextWrapper","ReportTitle","primaryFont","headRegular","ReportText","secondaryFont","light","ReportsList","ReportsListItem","ReportsListItemTitle","ReportsWrapper","ReportsButtonWrapper","lightBlue","ReportName","ReportIconArrow","blue","LoadMoreWrapper","LoadIconArrow","CollapseIconArrow","reportsArr","id","month","useState","nextNumber","setNextNumber","lang","useContext","LanguageContext","data","useFetch","reportingList","slice","map","el","reportingMonth","financialReport","target","resultsReport","length","type","onClick"],"sourceRoot":""}