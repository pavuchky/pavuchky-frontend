{"version":3,"file":"static/js/987.45bcd7e8.chunk.js","mappings":"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","sources":["components/GalleryVideos/MobGalleryVideo.styled.js","components/GalleryVideos/MobGalleryVideo.jsx","components/GalleryVideos/TabDesktopGalleryVideo.styled.js","components/GalleryVideos/TabDesktopGalleryVideo.jsx","components/GalleryVideos/GalleryVideos.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport ReactPlayer from 'react-player';\nimport { theme } from '../../stylesheet/theme';\nconst { fonts, fontSizes, fontWeights, colors } = theme;\n\nexport const VideoGallerySwiperWrapper = styled.div`\n  display: flex;\n  width: 100%;\n`;\n\nexport const VideoReactPlayer = styled(ReactPlayer)`\n  width: 100% !important;\n`;\n\nexport const VideoSwiperSlideContainer = styled(SwiperSlide)`\n  width: 100%;\n  height: 427px;\n`;\n\nexport const VideoText = styled.span`\n  display: flex;\n  padding-top: 16px;\n  padding-left: 16px;\n  padding-bottom: 16px;\n  margin-bottom: 24px;\n\n  font-family: ${fonts.regular};\n  font-size: ${fontSizes.xs};\n  font-weight: ${fontWeights.regular};\n\n  border: 1px solid ${colors.blue};\n  border-top: 0px;\n  border-radius: 0px 0px 8px 8px;\n\n  background-color: ${colors.white};\n\n  @media (min-width: 768px) {\n    font-family: ${fonts.light};\n    font-size: ${fontSizes.s};\n    font-weight: ${fontWeights.light};\n    padding-bottom: 0;\n    margin-bottom: 0;\n    border: 0;\n    border-top: 0px;\n    border-radius: 0px;\n    padding: 16px 16px 24px 16px;\n  }\n`;\nexport const VideoSwiperContainer = styled(Swiper)`\n  position: relative;\n  width: 100%;\n  overflow: hidden;\n\n  border-radius: 8px 8px 0 0;\n\n  .swiper-scrollbar {\n    background-color: ${colors.grey};\n    height: 2px;\n  }\n\n  .swiper-scrollbar-drag:last-child {\n    background-color: ${colors.blue};\n    min-height: 2px;\n  }\n\n  .swiper-scrollbar-drag:not(:last-child) {\n    display: none;\n  }\n`;\nexport const RedirectButton = styled.button`\n  width: 325px;\n  height: 25px;\n  font-size: 14px;\n  border-radius: 25px;\n  border: none;\n  background-color: ${colors.blue};\n  color: ${colors.yellow};\n  margin-bottom: 25px;\n`;","import React, { useState } from 'react';\nimport { Scrollbar } from 'swiper';\nimport 'swiper/css/bundle';\n\nimport {\n  VideoGallerySwiperWrapper,\n  VideoSwiperSlideContainer,\n  VideoSwiperContainer,\n  VideoText,\n  VideoReactPlayer, RedirectButton\n} from './MobGalleryVideo.styled';\n\nconst MobGalleryVideos = ({ data }) => {\n  const [playingVideoLink, setPlayingVideoLink] = useState(null);\n\n  const handleVideoClick = (videoLink) => {\n    setPlayingVideoLink(videoLink);\n  };\n\n  const redirectToYouTube = () => {\n    if (playingVideoLink) {\n      window.open(playingVideoLink, '_blank');\n    }\n  };\n\n  return (\n    <VideoGallerySwiperWrapper>\n      <VideoSwiperContainer\n        spaceBetween={16}\n        slidesPerView={1}\n        scrollbar={{ draggable: true }}\n        modules={[Scrollbar]}\n       \n      >\n        {data?.galleryVideoList?.map(({ id, videoLink }) => (\n          <VideoSwiperSlideContainer key={id}>\n            <div onClick={() => handleVideoClick(videoLink)}>\n              <VideoReactPlayer\n                style={{ pointerEvents: 'none' }}\n                url={videoLink}\n                width={320}\n                playing={videoLink === playingVideoLink}\n                muted={true}\n                controls={false}\n                loop={false}\n                config={{\n                  youtube: {\n                    playerVars: { origin: 'https://www.youtube.com' },\n                  },\n                }}\n              />\n            </div>\n            <VideoText>\n              Виготовлення <br /> маскувальних сіток\n            </VideoText>\n            {playingVideoLink && (\n              <RedirectButton onClick={redirectToYouTube}>Переглянути на YouTube</RedirectButton>\n            )}\n          </VideoSwiperSlideContainer>\n        ))}\n      </VideoSwiperContainer>\n      \n    </VideoGallerySwiperWrapper>\n  );\n};\n\nexport default MobGalleryVideos;\n","import styled from 'styled-components';\n\nimport { theme } from '../../stylesheet/theme';\nimport ReactPlayer from 'react-player';\nimport { Pagination } from '@mui/material';\n\nconst { fontSizes, fontWeights, colors, fonts, borders, radii } = theme;\n\nexport const VideoTabGridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: 316px 316px;\n  gap: 24px;\n  margin-bottom: 32px;\n\n  li {\n    border: 1px solid ${colors.blue};\n    border-radius: ${radii.s};\n    overflow: hidden;\n  }\n`;\n\nexport const VideoTabReactPlayer = styled(ReactPlayer)`\n  height: 421px !important;\n`;\n\nexport const VideoTabButton = styled.button`\n  width: 100%;\n  height: 48px;\n  padding: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: ${fonts.regular};\n  font-size: ${fontSizes.m};\n  font-weight: ${fontWeights.regular};\n\n  cursor: pointer;\n  border-radius: 16px;\n  outline: transparent;\n  color: ${colors.white};\n  background-color: ${colors.blue};\n\n  &:hover {\n    color: ${colors.yellow};\n  }\n\n  &:focus {\n    outline: transparent;\n    color: ${colors.yellow};\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\n/**==========================DesctopStyles================= */\n\nexport const VideoDesktopGridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: 409px 409px 409px;\n  gap: 26px;\n  margin-top: 44px;\n  margin-bottom: 44px;\n\n  li {\n    border: 1px solid ${colors.blue};\n    border-radius: ${radii.s};\n    overflow: hidden;\n  }\n`;\n\nexport const VideoDesktopReactPlayer = styled(ReactPlayer)`\n  height: 421px !important;\n`;\n\nexport const VideoPaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const VideoPagination = styled(Pagination)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n\n  .MuiPaginationItem-root {\n    margin: 0px 24px 0px 0px;\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n    color: ${colors.grey};\n    font-size: ${fontSizes.s} !important;\n    font-family: ${fonts.regular} !important;\n    font-weight: ${fontWeights.light};\n    padding: 0;\n\n    .MuiPaginationItem-icon {\n      fill: ${colors.blue};\n    }\n  }\n\n  & .Mui-Selected {\n    color: ${colors.blue};\n    border-color: ${colors.blue} !important;\n    background-color: transparent !important;\n\n    .Mui-disabled {\n      border-color: ${colors.grey} !important;\n      .MuiPaginationItem-root.MuiPaginationItem-icon.Mui-disabled {\n        fill: ${colors.grey} !important;\n      }\n    }\n  }\n\n  .MuiPaginationItem-previousNext {\n    border: ${borders.normal};\n    border-color: ${colors.blue} !important;\n    border-radius: ${radii.round};\n  }\n`;\n","import { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMediaQuery } from 'react-responsive';\nimport { PaginationItem } from '@mui/material';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\n\nimport {\n  VideoTabGridContainer,\n  VideoTabButton,\n  VideoTabReactPlayer,\n  VideoDesktopGridContainer,\n  VideoDesktopReactPlayer,\n  VideoPaginationContainer,\n  VideoPagination,\n} from './TabDesktopGalleryVideo.styled';\nimport { VideoText } from './MobGalleryVideo.styled';\n\nconst TabDesktopGalleryVideo = ({ data }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const [visibleVideos, setVisibleVideos] = useState(4);\n\n  const itemsPerPage = 9;\n  const isDesktopScreen = useMediaQuery({ minWidth: 1440 });\n  const isTabletScreen = useMediaQuery({ minWidth: 768 });\n\n  const { t } = useTranslation();\n\n  const loadMoreVideos = () => {\n    setVisibleVideos(prevVisibleImages => prevVisibleImages + 3);\n  };\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const showingVideos = data?.galleryVideoList?.slice(\n    startIndex,\n    startIndex + itemsPerPage\n  );\n  const onPageChange = (event, newPage) => {\n    setCurrentPage(newPage);\n  };\n  return (\n    <>\n      {!isDesktopScreen && isTabletScreen && (\n        <>\n          <VideoTabGridContainer>\n            {data?.galleryVideoList\n              ?.slice(0, visibleVideos)\n              .map(({ videoLink, id }) => {\n                return (\n                  <li key={id}>\n                    <VideoTabReactPlayer\n                  \n                      url={videoLink}\n                      width={'100%'}\n                      playing={false}\n                      config={{\n                        youtube: {\n                          playerVars: {\n                            origin: 'https://www.youtube.com',\n                          },\n                        },\n                      }}\n                    />\n                    <VideoText>Виготовлення маскувальних сіток</VideoText>\n                  </li>\n                );\n              })}\n          </VideoTabGridContainer>\n          {visibleVideos < data?.galleryVideoList?.length && (\n            <VideoTabButton onClick={loadMoreVideos}>\n              {t('buttons.viewMore')}\n            </VideoTabButton>\n          )}\n        </>\n      )}\n\n      {isDesktopScreen && (\n        <>\n          <VideoDesktopGridContainer>\n            {showingVideos?.map(({ videoLink, id }) => {\n              return (\n                <li key={id}>\n                  <VideoDesktopReactPlayer\n                    url={videoLink}\n                    width={'316'}\n                    playing={false}\n                    config={{\n                      youtube: {\n                        playerVars: { origin: 'https://www.youtube.com' },\n                      },\n                    }}\n                  />\n                  <VideoText>Виготовлення маскувальних сіток</VideoText>\n                </li>\n              );\n            })}\n          </VideoDesktopGridContainer>\n\n          <VideoPaginationContainer>\n            <VideoPagination\n              count={Math.ceil(\n                (data?.galleryVideoList?.length || 0) / itemsPerPage\n              )}\n              page={currentPage}\n              onChange={onPageChange}\n              color=\"primary\"\n              variant=\"outlined\"\n              boundaryCount={1}\n              siblingCount={0}\n              renderItem={item => (\n                <PaginationItem\n                  slots={{\n                    previous: SlArrowLeft,\n                    next: SlArrowRight,\n                  }}\n                  {...item}\n                />\n              )}\n            />\n          </VideoPaginationContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TabDesktopGalleryVideo;\n","import { useMediaQuery } from 'react-responsive';\nimport useFetch from '../../hooks/useFetch';\nimport MobGalleryVideos from './MobGalleryVideo';\nimport TabDesktopGalleryVideo from './TabDesktopGalleryVideo';\n\n\n\nconst GalleryVideos = () => {\n  const { data } = useFetch('galleryVideo');\n  const isTabletScreen = useMediaQuery({ minWidth: 767 });\n\n  return (\n    <>\n      {!isTabletScreen ? (\n        <MobGalleryVideos data={data} />\n      ) : (\n        <TabDesktopGalleryVideo data={data} />\n      )}\n    </>\n  );\n};\n\nexport default GalleryVideos;\n"],"names":["fonts","theme","fontSizes","fontWeights","colors","VideoGallerySwiperWrapper","styled","VideoReactPlayer","ReactPlayer","VideoSwiperSlideContainer","SwiperSlide","VideoText","regular","xs","blue","white","light","s","VideoSwiperContainer","Swiper","grey","RedirectButton","yellow","data","useState","playingVideoLink","setPlayingVideoLink","redirectToYouTube","window","open","spaceBetween","slidesPerView","scrollbar","draggable","modules","Scrollbar","galleryVideoList","map","id","videoLink","onClick","handleVideoClick","style","pointerEvents","url","width","playing","muted","controls","loop","config","youtube","playerVars","origin","borders","radii","VideoTabGridContainer","VideoTabReactPlayer","VideoTabButton","m","VideoDesktopGridContainer","VideoDesktopReactPlayer","VideoPaginationContainer","VideoPagination","Pagination","normal","round","currentPage","setCurrentPage","visibleVideos","setVisibleVideos","isDesktopScreen","useMediaQuery","minWidth","isTabletScreen","t","useTranslation","startIndex","showingVideos","slice","length","prevVisibleImages","count","Math","ceil","page","onChange","event","newPage","color","variant","boundaryCount","siblingCount","renderItem","item","PaginationItem","slots","previous","SlArrowLeft","next","SlArrowRight","useFetch","MobGalleryVideo"],"sourceRoot":""}