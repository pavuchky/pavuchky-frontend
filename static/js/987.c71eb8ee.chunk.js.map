{"version":3,"file":"static/js/987.c71eb8ee.chunk.js","mappings":"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","sources":["components/GalleryVideos/MobGalleryVideo.styled.js","components/GalleryVideos/MobGalleryVideo.jsx","components/GalleryVideos/TabDesktopGalleryVideo.styled.js","components/GalleryVideos/TabDesktopGalleryVideo.jsx","components/GalleryVideos/GalleryVideos.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Pagination } from '@mui/material';\nimport ReactPlayer from 'react-player';\nimport { theme } from '../../stylesheet/theme';\n\nconst { fonts, fontSizes, fontWeights, colors, radii, borders } = theme;\n\nexport const VideoGalleryWrapper = styled.div`\n  display: flex;\n`;\n\nexport const VideoReactPlayer = styled(ReactPlayer)`\n  width: 100%;\n\n  @media only screen and (min-width: 375px) {\n    width: 327px !important;\n  }\n`;\n\nexport const VideoMobileContainer = styled.ul`\n  margin-bottom: 24px;\n  li {\n    border: 1px solid ${colors.blue};\n    border-radius: ${radii.s};\n    overflow: hidden;\n  }\n`;\n\nexport const VideoText = styled.span`\n  display: flex;\n  padding: 16px;\n\n  font-family: ${fonts.regular};\n  font-size: ${fontSizes.xs};\n  font-weight: ${fontWeights.regular};\n\n  border-radius: 0px 0px 8px 8px;\n\n  background-color: ${colors.white};\n\n  @media (min-width: 768px) {\n    font-family: ${fonts.light};\n    font-size: ${fontSizes.s};\n    font-weight: ${fontWeights.light};\n    padding-bottom: 0;\n    margin-bottom: 0;\n    border: 0;\n    border-top: 0px;\n    border-radius: 0px;\n    padding: 16px 16px 24px 16px;\n  }\n`;\n\nexport const MobPagination = styled(Pagination)`\n  max-width: 320px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n\n  .MuiPaginationItem-root {\n    margin: 0px 8px 0px 0px;\n    width: 37px;\n    height: 37px;\n    border-radius: 50%;\n    color: ${colors.grey};\n    font-size: 14px !important;\n    font-family: ${fonts.regular} !important;\n    font-weight: ${fontWeights.light};\n    padding: 0;\n\n    .MuiPaginationItem-icon {\n      fill: ${colors.blue};\n      font-size: 14px;\n    }\n  }\n\n  & .Mui-Selected {\n    color: ${colors.blue};\n    border-color: ${colors.blue} !important;\n    background-color: transparent !important;\n\n    .Mui-disabled {\n      border-color: ${colors.grey} !important;\n      .MuiPaginationItem-root.MuiPaginationItem-icon.Mui-disabled {\n        fill: ${colors.grey} !important;\n      }\n    }\n\n    .MuiPaginationItem-outlinedPrimary {\n      margin: 0 !important;\n    }\n  }\n\n  .MuiPaginationItem-previousNext {\n    border: ${borders.normal};\n    border-color: ${colors.blue} !important;\n    border-radius: ${radii.round};\n  }\n`;\n","import React, { useContext, useState } from 'react';\nimport { PaginationItem } from '@mui/material';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\nimport { LanguageContext } from 'utils/LanguageContext';\nimport {\n  VideoMobileContainer,\n  MobPagination,\n  VideoText,\n  VideoReactPlayer,\n} from './MobGalleryVideo.styled';\nimport { useTranslation } from 'react-i18next';\n\nconst MobGalleryVideos = ({ data }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n const { t } = useTranslation();\n const { lang } = useContext(LanguageContext);\n\n  const itemsPerPage = 1;\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const showingVideos = data?.galleryVideoList?.slice(\n    startIndex,\n    startIndex + itemsPerPage\n  );\n\n \n  const onPageChange = (event, newPage) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <>\n      <VideoMobileContainer>\n         {showingVideos?.map(({ videoLink, id, videoDescription }) => {\n          const renderedDescription = videoDescription?.[lang] || `${t('videos.netsCreation')}`; \n          return (\n            <li key={id}>\n              <VideoReactPlayer\n                url={videoLink}\n                width={'316'}\n                playing={false}\n                config={{\n                  youtube: {\n                    playerVars: { origin: 'https://www.youtube.com' },\n                  },\n                }}\n              />\n              <VideoText>{renderedDescription}</VideoText>\n            </li>\n          );\n        })}\n      </VideoMobileContainer>\n      <div>\n        <MobPagination\n          count={Math.ceil(\n            (data?.galleryVideoList?.length || 0) / itemsPerPage\n          )}\n          page={currentPage}\n          onChange={onPageChange}\n          size=\"small\"\n          color=\"primary\"\n          variant=\"outlined\"\n          boundaryCount={1}\n          siblingCount={0}\n          renderItem={item => (\n            <PaginationItem\n              slots={{\n                previous: SlArrowLeft,\n                next: SlArrowRight,\n              }}\n              {...item}\n            />\n          )}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default MobGalleryVideos;\n","import styled from 'styled-components';\n\nimport { theme } from '../../stylesheet/theme';\nimport ReactPlayer from 'react-player';\nimport { Pagination } from '@mui/material';\n\nconst { fontSizes, fontWeights, colors, fonts, borders, radii } = theme;\n\nexport const VideoTabGridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: 316px 316px;\n  gap: 24px;\n  margin-bottom: 32px;\n\n  li {\n    border: 1px solid ${colors.blue};\n    border-radius: ${radii.s};\n    overflow: hidden;\n  }\n`;\n\nexport const VideoTabReactPlayer = styled(ReactPlayer)`\n  height: 421px !important;\n`;\n\nexport const VideoTabButton = styled.button`\n  width: 100%;\n  height: 48px;\n  padding: 10px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-family: ${fonts.regular};\n  font-size: ${fontSizes.m};\n  font-weight: ${fontWeights.regular};\n\n  cursor: pointer;\n  border-radius: 16px;\n  outline: transparent;\n  color: ${colors.white};\n  background-color: ${colors.blue};\n\n  &:hover {\n    color: ${colors.yellow};\n  }\n\n  &:focus {\n    outline: transparent;\n    color: ${colors.yellow};\n  }\n\n  @media (min-width: 1440px) {\n    display: none;\n  }\n`;\n\n/**==========================DesctopStyles================= */\n\nexport const VideoDesktopGridContainer = styled.ul`\n  display: grid;\n  grid-template-columns: 409px 409px 409px;\n  gap: 26px;\n  margin-top: 44px;\n  margin-bottom: 44px;\n\n  li {\n    border: 1px solid ${colors.blue};\n    border-radius: ${radii.s};\n    overflow: hidden;\n  }\n`;\n\nexport const VideoDesktopReactPlayer = styled(ReactPlayer)`\n  height: 421px !important;\n`;\n\nexport const VideoPaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const VideoPagination = styled(Pagination)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n\n  .MuiPaginationItem-root {\n    margin: 0px 24px 0px 0px;\n    width: 64px;\n    height: 64px;\n    border-radius: 50%;\n    color: ${colors.grey};\n    font-size: ${fontSizes.s} !important;\n    font-family: ${fonts.regular} !important;\n    font-weight: ${fontWeights.light};\n    padding: 0;\n\n    .MuiPaginationItem-icon {\n      fill: ${colors.blue};\n    }\n  }\n\n  & .Mui-Selected {\n    color: ${colors.blue};\n    border-color: ${colors.blue} !important;\n    background-color: transparent !important;\n\n    .Mui-disabled {\n      border-color: ${colors.grey} !important;\n      .MuiPaginationItem-root.MuiPaginationItem-icon.Mui-disabled {\n        fill: ${colors.grey} !important;\n      }\n    }\n  }\n\n  .MuiPaginationItem-previousNext {\n    border: ${borders.normal};\n    border-color: ${colors.blue} !important;\n    border-radius: ${radii.round};\n  }\n`;\n","import { useContext, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useMediaQuery } from 'react-responsive';\nimport { PaginationItem } from '@mui/material';\nimport { SlArrowLeft, SlArrowRight } from 'react-icons/sl';\nimport { LanguageContext } from 'utils/LanguageContext';\nimport {\n  VideoTabGridContainer,\n  VideoTabButton,\n  VideoTabReactPlayer,\n  VideoDesktopGridContainer,\n  VideoDesktopReactPlayer,\n  VideoPaginationContainer,\n  VideoPagination,\n} from './TabDesktopGalleryVideo.styled';\nimport { VideoText } from './MobGalleryVideo.styled';\n\nconst TabDesktopGalleryVideo = ({ data }) => {\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const { lang } = useContext(LanguageContext);\n\n  const [visibleVideos, setVisibleVideos] = useState(4);\n\n  const itemsPerPage = 9;\n  const isDesktopScreen = useMediaQuery({ minWidth: 1440 });\n  const isTabletScreen = useMediaQuery({ minWidth: 768 });\n\n  const { t } = useTranslation();\n\n  const loadMoreVideos = () => {\n    setVisibleVideos(prevVisibleImages => prevVisibleImages + 3);\n  };\n\n  const startIndex = (currentPage - 1) * itemsPerPage;\n  const showingVideos = data?.galleryVideoList?.slice(\n    startIndex,\n    startIndex + itemsPerPage\n  );\n \n  const onPageChange = (event, newPage) => {\n    setCurrentPage(newPage);\n  };\n  return (\n    <>\n      {!isDesktopScreen && isTabletScreen && (\n        <>\n          <VideoTabGridContainer>\n            {data?.galleryVideoList\n              ?.slice(0, visibleVideos)\n              .map(({ videoLink, id, videoDescription }) => {\n                const renderedDescription = videoDescription?.[lang] || `${t('videos.netsCreation')}`;\n\n                return (\n                  <li key={id}>\n                    <VideoTabReactPlayer\n                      url={videoLink}\n                      width={'100%'}\n                      playing={false}\n                      config={{\n                        youtube: {\n                          playerVars: {\n                            origin: 'https://www.youtube.com',\n                          },\n                        },\n                      }}\n                    />\n                    <VideoText>{renderedDescription}</VideoText>\n                  </li>\n                );\n              })}\n          </VideoTabGridContainer>\n          {visibleVideos < data?.galleryVideoList?.length && (\n            <VideoTabButton onClick={loadMoreVideos}>\n              {t('buttons.viewMore')}\n            </VideoTabButton>\n          )}\n        </>\n      )}\n\n      {isDesktopScreen && (\n        <>\n          <VideoDesktopGridContainer>\n            {showingVideos?.map(({ videoLink, id, videoDescription }) => {\n              const renderedDescription = videoDescription?.[lang] || `${t('videos.netsCreation')}`;\n              return (\n                <li key={id}>\n                  <VideoDesktopReactPlayer\n                    url={videoLink}\n                    width={'316'}\n                    playing={false}\n                    config={{\n                      youtube: {\n                        playerVars: { origin: 'https://www.youtube.com' },\n                      },\n                    }}\n                  />\n                  <VideoText>{renderedDescription }</VideoText>\n                </li>\n              );\n            })}\n          </VideoDesktopGridContainer>\n\n          <VideoPaginationContainer>\n            <VideoPagination\n              count={Math.ceil(\n                (data?.galleryVideoList?.length || 0) / itemsPerPage\n              )}\n              page={currentPage}\n              onChange={onPageChange}\n              color=\"primary\"\n              variant=\"outlined\"\n              boundaryCount={1}\n              siblingCount={0}\n              renderItem={item => (\n                <PaginationItem\n                  slots={{\n                    previous: SlArrowLeft,\n                    next: SlArrowRight,\n                  }}\n                  {...item}\n                />\n              )}\n            />\n          </VideoPaginationContainer>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default TabDesktopGalleryVideo;\n","import { useMediaQuery } from 'react-responsive';\nimport useFetch from '../../hooks/useFetch';\nimport MobGalleryVideos from './MobGalleryVideo';\nimport TabDesktopGalleryVideo from './TabDesktopGalleryVideo';\n\n\n\nconst GalleryVideos = () => {\n  const { data } = useFetch('galleryVideo');\n  const isTabletScreen = useMediaQuery({ minWidth: 767 });\n\n  return (\n    <>\n      {!isTabletScreen ? (\n        <MobGalleryVideos data={data} />\n      ) : (\n        <TabDesktopGalleryVideo data={data} />\n      )}\n    </>\n  );\n};\n\nexport default GalleryVideos;\n"],"names":["fonts","theme","fontSizes","fontWeights","colors","radii","borders","VideoReactPlayer","styled","ReactPlayer","VideoMobileContainer","blue","s","VideoText","regular","xs","white","light","MobPagination","Pagination","grey","normal","round","data","useState","currentPage","setCurrentPage","t","useTranslation","lang","useContext","LanguageContext","startIndex","showingVideos","galleryVideoList","slice","map","videoLink","id","videoDescription","renderedDescription","url","width","playing","config","youtube","playerVars","origin","count","Math","ceil","length","page","onChange","event","newPage","size","color","variant","boundaryCount","siblingCount","renderItem","item","PaginationItem","slots","previous","SlArrowLeft","next","SlArrowRight","VideoTabGridContainer","VideoTabReactPlayer","VideoTabButton","m","yellow","VideoDesktopGridContainer","VideoDesktopReactPlayer","VideoPaginationContainer","VideoPagination","visibleVideos","setVisibleVideos","isDesktopScreen","useMediaQuery","minWidth","isTabletScreen","onClick","prevVisibleImages","useFetch","MobGalleryVideo"],"sourceRoot":""}